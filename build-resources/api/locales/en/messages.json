{
  "queryManager": {
    "querySent": "Query sent: {query}",
    "queryResponse": "Query response: {response}",
    "queryError": "Query error: {error}"
  },
  "alarmManager": {
    "alarmDetected": "Alarm detected: {alarmCode} - {alarmMessage}",
    "alarmRecoveryAttempt": "Attempting alarm recovery...",
    "alarmRecoverySuccess": "Alarm recovery successful. Machine state: {state}",
    "alarmRecoveryFailure": "Alarm recovery failed: {error}",
    "alarmReset": "Alarm reset command sent.",
    "softReset": "Soft reset command sent.",
    "unknownAlarm": "Unknown alarm condition",
    "recoveryUnlock": "Use $X to unlock",
    "recoveryCheckHome": "Check machine status and re-home if needed",
    "unknownAlarmCause": "Unknown alarm condition",
    "testingAlarmTriggers": "{icon} Testing alarm trigger conditions...",
    "softLimitTestName": "Soft limit test",
    "softLimitTestDescription": "Tests soft limit alarm triggering",
    "testingTest": "   Testing: {name} - {description}",
    "expectedAlarm": "Alarm",
    "expectedSuccess": "Success",
    "actualSuccess": "Success",
    "actualAlarm": "Alarm",
    "commandSuccess": "   ‚úÖ {command}: {response}",
    "commandError": "   ‚ùå {command}: {error}",
    "machineInAlarm": "Machine currently in ALARM state",
    "preventionLimitChecking": "Implement proper limit checking before sending movement commands",
    "preventionEnableSoftLimits": "Enable soft limits ($20=1) to prevent hard limit triggers",
    "softLimitsDisabled": "Soft limits disabled - machine can exceed travel limits",
    "preventionEnableSoftLimitsCommand": "Enable soft limits with $20=1",
    "preventionEnableHardLimits": "Consider enabling hard limits ($21=1) if limit switches are installed",
    "preventionEnableHomingCycle": "Enable homing cycle ($22=1) for better position accuracy",
    "executingRecoverySequence": "üîß Executing alarm recovery sequence for alarm type {alarmType}...",
    "sendingCommand": "   [{current}/{total}] Sending: {command}",
    "checklistSoftLimits": "‚úì Enable soft limits ($20=1) to prevent exceeding travel bounds",
    "checklistHardLimits": "‚úì Enable hard limits ($21=1) if limit switches are installed",
    "checklistHomingCycle": "‚úì Enable homing cycle ($22=1) for position accuracy",
    "checklistTestLimitSwitches": "‚úì Test all limit switches for proper operation",
    "checklistVerifyTravelLimits": "‚úì Verify machine travel limits are correctly configured",
    "checklistCheckProbe": "‚úì Check probe wiring and operation if using probing",
    "checklistSafetyDoor": "‚úì Ensure safety door switches are properly connected",
    "checklistCalibrate": "‚úì Regularly calibrate machine position and limits",
    "alarmType1": "Hard limit triggered",
    "alarmType2": "G-code motion target exceeds machine travel",
    "alarmType3": "Reset while in motion",
    "alarmType4": "Probe fail - probe not making contact",
    "alarmType5": "Probe fail - probe already triggered",
    "alarmType6": "Homing fail - limit switches not found",
    "alarmType7": "Homing fail - safety door opened",
    "alarmType8": "Homing fail - pull off travel exceeded",
    "alarmType9": "Homing fail - no limit switches found"
  },
  "commandExecutor": {
    "safetyWarning": "{icon} SAFETY WARNING:",
    "safetyWarningDetail": "   {warning}",
    "commandCancelled": "   Command execution cancelled for safety.",
    "unsafeCommandBlocked": "Unsafe command blocked: {warnings}",
    "emergencyStopInitiated": "{icon} EMERGENCY STOP INITIATED {icon}",
    "emergencyStopSuccess": "‚úì Emergency stop sent: {response}",
    "emergencyStopFailed": "‚úó Emergency stop failed: {error}",
    "executingCommand": "[{commandNumber}/{totalCommands}] Executing: {command}",
    "commandRetry": "Command failed, retrying in {retryDelay}ms (attempt {attempt}/{maxRetries})",
    "commandFailedAfterRetries": "Command failed after {maxRetries} attempts: {error}",
    "commandTooLong": "Command too long: {length} > {maxLength} characters",
    "invalidGcodePrefix": "Command does not start with standard G-code prefix (G, M, or T)",
    "dangerousCommand": "Command contains potentially dangerous operation"
  },
  "connectionManager": {
    "portsFound": "Found {count} available ports",
    "errorListingPorts": "Error listing ports:",
    "connectingToPort": "Attempting to connect to port: {portPath}",
    "connectedSuccessfully": "Successfully connected to {portPath}",
    "grblInitFailed": "GRBL initialization failed:",
    "portError": "Port error: {error}",
    "portClosed": "Port connection closed",
    "connectionTimeout": "Connection timeout after {timeout}ms",
    "errorDuringConnection": "Error during connection:",
    "alreadyDisconnected": "Already disconnected",
    "disconnecting": "Disconnecting from port",
    "disconnectedSuccessfully": "Successfully disconnected",
    "errorDuringDisconnect": "Error during disconnect:",
    "parserNotInitialized": "Parser not initialized. Must connect first.",
    "serialRawReceived": "[SERIAL RAW] Received: \"{data}\" (length: {length})",
    "serialCleanedProcessing": "[SERIAL CLEANED] Processing: \"{cleanedData}\""
  },
  "diagnosticsManager": {
    "testingSmallMovements": "   {icon} Testing small movements to verify machine responsiveness...",
    "testingMovement": "      Testing: {movement}",
    "movementSuccess": "      {icon} {movement}: {response} ({duration}ms)",
    "movementFailure": "      {icon} {movement}: {error}",
    "recommendEnableHoming": "Enable homing cycle with $22=1",
    "recommendEnableHardLimits": "Enable hard limits with $21=1 (required for homing)",
    "machineInAlarmState": "Machine is in ALARM state",
    "recommendUnlockAlarm": "Use $X to unlock alarm state",
    "machineInHoldState": "Machine is in HOLD state",
    "recommendResumeFromHold": "Use ~ to resume from hold",
    "unableToRetrieveStatus": "Unable to retrieve machine status",
    "softLimitsDisabled": "Soft limits are disabled",
    "recommendEnableSoftLimits": "Enable soft limits with $20=1 for safety",
    "hardLimitsDisabled": "Hard limits are disabled",
    "recommendEnableHardLimitsSetting": "Enable hard limits with $21=1 if limit switches are installed",
    "movementTestsFailed": "{count} movement tests failed",
    "recommendCheckConnections": "Check mechanical connections and motor drivers",
    "machineStatusQueryFailed": "Machine status query failed: {error}",
    "grblSettingsQueryFailed": "GRBL settings query failed: {error}",
    "coordinateSystemsQueryFailed": "Coordinate systems query failed: {error}",
    "parserStateQueryFailed": "Parser state query failed: {error}",
    "homingAnalysisFailed": "Homing analysis failed: {error}",
    "movementTestsFailedError": "Movement tests failed: {error}",
    "machineNotReadyForMovementTests": "Machine not ready for movement tests (state: {state})",
    "comprehensiveDiagnosticsFailed": "Comprehensive diagnostics failed: {error}"
  },
  "fileProcessor": {
    "fileNotFound": "File not found: {filePath}",
    "unrecognizedFileExtension": "File extension not recognized. Expected: {expectedExts}",
    "proceedingAnyway": "Proceeding anyway...",
    "readingGcodeFile": "Reading G-code file: {resolvedPath}",
    "noValidCommandsFound": "No valid G-code commands found in file",
    "commandsToExecute": "Found {count} G-code commands to execute",
    "executingCommand": "{progressMsg} Executing: {line}",
    "failedToExecuteLine": "Failed to execute line {lineNumber}: {line}",
    "errorDetail": "Error: {error}",
    "fileExecutionStopped": "File execution stopped by user",
    "fileExecutionFailed": "File execution failed: {error}",
    "fileNotFoundValidation": "File not found: {filePath}",
    "unrecognizedFileExtensionValidation": "Unrecognized file extension. Expected: {expectedExts}",
    "noValidCommandsFoundValidation": "No valid G-code commands found in file",
    "fileValidationFailed": "File validation failed: {error}",
    "errorOnLineContinue": "Error on line {lineNumber}, continuing with next command...",
    "failedToAnalyzeFile": "Failed to analyze file: {error}"
  },
  "cli": {
    "scanningPorts": "Scanning for available serial ports...\n",
    "noPortsFound": "No serial ports found.",
    "availablePorts": "Available serial ports:",
    "portPath": "  {path}",
    "portManufacturer": "    Manufacturer: {manufacturer}",
    "portSerial": "    Serial: {serialNumber}",
    "usingDefaultPort": "Using default port: {portPath}",
    "connectingForDiagnostics": "üîç Connecting to machine for diagnostics...",
    "runningDiagnostics": "üîç Running comprehensive movement diagnostics...",
    "diagnosticError": "‚úó Diagnostic Error: {error}",
    "connectingForLimits": "üéØ Connecting to machine to retrieve limits...",
    "queryingLimits": "üéØ Querying machine limits and position...",
    "limitsError": "‚úó Limits Error: {error}",
    "runningInteractiveMode": "running interactive mode with default port: {options}",
    "executingFile": "üìÑ Executing G-code file: {file}",
    "fileExecutionCompleted": "‚úì File execution completed: {file}",
    "totalCommands": "  Total commands: {count}",
    "successfulCommands": "  Successful: {count}",
    "failedCommands": "  Failed: {count}",
    "fileExecutionError": "‚úó File execution error: {error}",
    "commandSentSuccessfully": "‚úì Command sent successfully: {command}",
    "commandResponse": "  Response: {response}",
    "commandDuration": "  Duration: {duration}ms",
    "commandError": "‚úó Error: {error}",
    "usingSharedConnection": "üîó Using shared connection (already connected)",
    "sigintReceived": "\nReceived SIGINT, shutting down gracefully...",
    "sigtermReceived": "\nReceived SIGTERM, shutting down gracefully...",
    "fatalError": "Fatal error: {error}",
    "status": {
      "noConnection": "No shared connection active",
      "connected": "Shared connection active - Port: {port}, Interface: {interface}",
      "connectionState": "Connection state: {state}"
    }
  },
  "diagnosticsService": {
    "notConnectedError": "Must be connected to machine before running diagnostics",
    "separator": "============================================",
    "comprehensiveDiagnosticsTitle": "   üîç COMPREHENSIVE MOVEMENT DIAGNOSTICS",
    "step1QueryMachineStatus": "üìä Step 1: Querying machine status...",
    "step2QueryGrblSettings": "‚öôÔ∏è  Step 2: Querying GRBL settings...",
    "step3QueryCoordinateSystems": "üìê Step 3: Querying coordinate systems...",
    "step4QueryParserState": "üîç Step 4: Querying parser state...",
    "step5PerformingAlarmAnalysis": "üö® Step 5: Performing ALARM analysis...",
    "step5NoAlarmDetected": "‚úÖ Step 5: No ALARM state detected - machine appears operational",
    "step6TestingSmallMovements": "üéØ Step 6: Testing small movements...",
    "step6SkippingMovementTests": "‚ö†Ô∏è  Step 6: Skipping movement tests - machine needs attention first",
    "step7GeneratingRecommendations": "üìã Step 7: Generating analysis and recommendations...",
    "diagnosticError": "\n‚ùå Diagnostic Error: {error}",
    "machineInAlarmState": "Machine is in ALARM state",
    "alarmRecoveryRecommendation": "Run ALARM recovery ($X unlock, then $H homing)",
    "missingCriticalSetting": "Missing critical setting ${setting} ({description})",
    "configureSetting": "Configure ${setting} for {description}",
    "xAxisStepsZero": "X-axis steps/mm is 0",
    "yAxisStepsZero": "Y-axis steps/mm is 0",
    "zAxisStepsZero": "Z-axis steps/mm is 0",
    "xAxisMaxRateZero": "X-axis max rate is 0",
    "yAxisMaxRateZero": "Y-axis max rate is 0",
    "zAxisMaxRateZero": "Z-axis max rate is 0",
    "unableToCommunicate": "‚ùå Unable to communicate with machine - check connection and baud rate",
    "machineInAlarmStateAutoRecovery": "üö® Machine is in ALARM state - automatic recovery will be attempted",
    "alarmRecoveryUnlockHome": "   Use $X to unlock, then $H to home the machine",
    "enableSoftLimitsRecommendation": "‚ö†Ô∏è  Enable soft limits with $20=1 for safety",
    "enableHomingCycleRecommendation": "‚ö†Ô∏è  Enable homing cycle with $22=1 for reliable positioning",
    "movementTestSkipped": "üéØ Machine status prevents movement testing - resolve ALARM/Lock state first",
    "machineReady": "‚úÖ Machine appears to be properly configured and ready for operation",
    "testingSmallMovementsLog": "   üéØ Testing small movements to verify machine responsiveness...",
    "testingMovementLog": "      Testing: {movement}",
    "movementSuccessLog": "      ‚úÖ {movement}: {response} ({duration}ms)",
    "movementFailureLog": "      ‚ùå {movement}: {error}",
    "diagnosticReportTitle": "           üìã DIAGNOSTIC REPORT üìã",
    "machineStatusHeader": "üîç MACHINE STATUS:",
    "state": "   State: {state}",
    "position": "   Position: X{x} Y{y} Z{z}",
    "unableToRetrieveMachineStatus": "   ‚ùå Unable to retrieve machine status",
    "grblSettingsHeader": "\n‚öôÔ∏è  GRBL SETTINGS:",
    "settingsRetrieved": "   ‚úÖ Retrieved {count} settings",
    "settingValue": "   ${settingNum}: {value}",
    "unableToRetrieveGrblSettings": "   ‚ùå Unable to retrieve GRBL settings",
    "movementTestsHeader": "\nüéØ MOVEMENT TESTS:",
    "movementsSuccessful": "   ‚úÖ {successful}/{total} movements successful",
    "durationMs": "{duration}ms",
    "testResult": "   {status} {command}: {info}",
    "noMovementTestsPerformed": "   ‚ö†Ô∏è  No movement tests performed (machine not ready)",
    "recommendationsHeader": "\nüí° RECOMMENDATIONS:",
    "recommendationItem": "   {recommendation}",
    "noSpecificRecommendations": "   ‚úÖ No specific recommendations - machine appears operational",
    "reportGenerated": "Report generated: {timestamp}",
    "enableHomingCycleRecommendation2": "Enable homing cycle with $22=1",
    "enableHardLimitsRecommendation2": "Enable hard limits with $21=1 (required for homing)",
    "alarm1Cause": "Hard limit triggered",
    "alarm1Step1": "Check that machine is within travel limits",
    "alarm1Step2": "Use $X to unlock, then carefully jog to safe position",
    "alarm2Cause": "G-code motion target exceeds machine travel",
    "alarm2Step1": "Check G-code for values outside machine limits",
    "alarm2Step2": "Use $X to unlock",
    "alarm3Cause": "Reset while in motion",
    "alarm3Step1": "Use $X to unlock",
    "alarm3Step2": "Re-home machine with $H",
    "unknownAlarmCondition": "Unknown alarm condition",
    "unknownAlarmStep1": "Use $X to unlock",
    "unknownAlarmStep2": "Check machine status and re-home if needed",
    "testingAlarmTriggers": "‚ö†Ô∏è  Testing alarm trigger conditions...",
    "machineInAlarmState2": "Machine currently in ALARM state",
    "implementLimitChecking": "Implement proper limit checking before sending movement commands",
    "enableSoftLimitsPrevention": "Enable soft limits ($20=1) to prevent hard limit triggers",
    "softLimitsDisabled": "Soft limits disabled - machine can exceed travel limits",
    "enableSoftLimitsCommand": "Enable soft limits with $20=1",
    "alarmDetailsHeader": "üîç ALARM DETAILS:",
    "unknown": "Unknown",
    "alarmType": "   Type: {type}",
    "possibleCausesHeader": "\nüéØ POSSIBLE CAUSES:",
    "causeItem": "   ‚Ä¢ {cause}",
    "recoveryStepsHeader": "\nüîß RECOVERY STEPS:",
    "recoveryStepItem": "   {index}. {step}",
    "noAlarmDetectedInfo": "‚ÑπÔ∏è  No ALARM state detected - machine appears operational"
  }
}