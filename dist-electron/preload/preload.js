"use strict";const e=require("electron"),t={app:{getVersion:()=>e.ipcRenderer.invoke("app:get-version"),getPath:r=>e.ipcRenderer.invoke("app:get-path",r),showErrorBox:(r,o)=>e.ipcRenderer.invoke("app:show-error-box",r,o)},machine:{connect:r=>e.ipcRenderer.invoke("machine:connect",{port:r}),disconnect:()=>e.ipcRenderer.invoke("machine:disconnect"),jog:r=>e.ipcRenderer.invoke("machine:jog",r),home:()=>e.ipcRenderer.invoke("machine:home"),getStatus:()=>e.ipcRenderer.invoke("machine:status"),onStateChanged:r=>(e.ipcRenderer.on("machine:state-changed",(o,n)=>r(n)),()=>e.ipcRenderer.removeAllListeners("machine:state-changed")),onError:r=>(e.ipcRenderer.on("machine:error",(o,n)=>r(n)),()=>e.ipcRenderer.removeAllListeners("machine:error"))},serial:{listPorts:()=>e.ipcRenderer.invoke("serial:list-ports"),getPortStatus:r=>e.ipcRenderer.invoke("serial:port-status",{port:r}),onPortConnected:r=>(e.ipcRenderer.on("serial:port-connected",(o,n)=>r(n.port)),()=>e.ipcRenderer.removeAllListeners("serial:port-connected")),onPortDisconnected:r=>(e.ipcRenderer.on("serial:port-disconnected",(o,n)=>r(n.port)),()=>e.ipcRenderer.removeAllListeners("serial:port-disconnected")),onPortsChanged:r=>(e.ipcRenderer.on("serial:ports-changed",(o,n)=>r(n)),()=>e.ipcRenderer.removeAllListeners("serial:ports-changed"))},file:{openGCode:()=>e.ipcRenderer.invoke("file:open-gcode"),saveGCode:(r,o)=>e.ipcRenderer.invoke("file:save-gcode",{path:r,content:o}),getRecentFiles:()=>e.ipcRenderer.invoke("file:recent-files"),openProject:()=>e.ipcRenderer.invoke("file:open-project"),saveProject:r=>e.ipcRenderer.invoke("file:save-project",r)},preferences:{get:()=>e.ipcRenderer.invoke("preferences:get"),set:r=>e.ipcRenderer.invoke("preferences:set",r),reset:()=>e.ipcRenderer.invoke("preferences:reset")},updater:{checkForUpdates:()=>e.ipcRenderer.invoke("updater:check-for-updates"),downloadUpdate:()=>e.ipcRenderer.invoke("updater:download-update"),installUpdate:()=>e.ipcRenderer.invoke("updater:install-update"),getReleaseNotes:r=>e.ipcRenderer.invoke("updater:get-release-notes",{version:r}),onUpdateAvailable:r=>(e.ipcRenderer.on("updater:update-available",(o,n)=>r(n)),()=>e.ipcRenderer.removeAllListeners("updater:update-available")),onUpdateDownloaded:r=>(e.ipcRenderer.on("updater:update-downloaded",()=>r()),()=>e.ipcRenderer.removeAllListeners("updater:update-downloaded")),onDownloadProgress:r=>(e.ipcRenderer.on("updater:download-progress",(o,n)=>r(n)),()=>e.ipcRenderer.removeAllListeners("updater:download-progress"))},system:{getInfo:()=>e.ipcRenderer.invoke("system:get-info"),getPlatform:()=>e.ipcRenderer.invoke("system:get-platform"),getArch:()=>e.ipcRenderer.invoke("system:get-arch")},menu:{onNewProject:r=>(e.ipcRenderer.on("menu:new-project",()=>r()),()=>e.ipcRenderer.removeAllListeners("menu:new-project")),onOpenFile:r=>(e.ipcRenderer.on("menu:open-file",()=>r()),()=>e.ipcRenderer.removeAllListeners("menu:open-file")),onSave:r=>(e.ipcRenderer.on("menu:save",()=>r()),()=>e.ipcRenderer.removeAllListeners("menu:save")),onSaveAs:r=>(e.ipcRenderer.on("menu:save-as",()=>r()),()=>e.ipcRenderer.removeAllListeners("menu:save-as")),onPreferences:r=>(e.ipcRenderer.on("menu:preferences",()=>r()),()=>e.ipcRenderer.removeAllListeners("menu:preferences"))},utils:{openExternal:r=>e.ipcRenderer.invoke("utils:open-external",{url:r}),showItemInFolder:r=>e.ipcRenderer.invoke("utils:show-item-in-folder",{path:r})}};e.contextBridge.exposeInMainWorld("electronAPI",t);e.contextBridge.exposeInMainWorld("electronPreload",{version:"1.0.0",loaded:!0,timestamp:Date.now()});delete window.require;delete window.exports;delete window.module;
