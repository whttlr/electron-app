"use strict";var W=Object.create;var R=Object.defineProperty;var L=Object.getOwnPropertyDescriptor;var z=Object.getOwnPropertyNames;var N=Object.getPrototypeOf,T=Object.prototype.hasOwnProperty;var $=(o,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of z(e))!T.call(o,s)&&s!==t&&R(o,s,{get:()=>e[s],enumerable:!(r=L(e,s))||r.enumerable});return o};var k=(o,e,t)=>(t=o!=null?W(N(o)):{},$(e||!o||!o.__esModule?R(t,"default",{value:o,enumerable:!0}):t,o));const n=require("electron"),h=require("path"),v=require("electron-is-dev"),u=require("fs/promises"),E=require("serialport"),j=require("@serialport/parser-readline"),x=require("events"),y=require("os"),p=require("electron-updater"),M={main:{name:"main",width:1200,height:800,minWidth:800,minHeight:600,show:!1,frame:!0,titleBarStyle:process.platform==="darwin"?"hiddenInset":"default",trafficLightPosition:process.platform==="darwin"?{x:20,y:32}:void 0,webPreferences:{nodeIntegration:!1,contextIsolation:!0,enableRemoteModule:!1,sandbox:!0,webSecurity:!0,allowRunningInsecureContent:!1,experimentalFeatures:!1}},preferences:{name:"preferences",width:800,height:600,minWidth:600,minHeight:400,show:!1,modal:!0,resizable:!0,minimizable:!1,maximizable:!1,fullscreenable:!1,webPreferences:{nodeIntegration:!1,contextIsolation:!0,enableRemoteModule:!1,sandbox:!0,webSecurity:!0},route:"/settings"},about:{name:"about",width:400,height:300,minWidth:400,minHeight:300,maxWidth:400,maxHeight:300,show:!1,modal:!0,resizable:!1,minimizable:!1,maximizable:!1,fullscreenable:!1,webPreferences:{nodeIntegration:!1,contextIsolation:!0,enableRemoteModule:!1,sandbox:!0,webSecurity:!0},route:"/about"}},c={name:"CNC Jog Controls",version:n.app.getVersion(),description:"Professional CNC machine control application",author:"Jogger CNC Tools",homepage:"https://github.com/jogger-cnc/jog-controls",repository:"https://github.com/jogger-cnc/jog-controls",features:{autoUpdater:process.env.NODE_ENV==="production",crashReporting:process.env.NODE_ENV==="production",analytics:!1,developerTools:process.env.NODE_ENV==="development",contextMenu:process.env.NODE_ENV==="development"},performance:{enableGPUAcceleration:!0,enableWebSecurity:!0,enableRemoteModule:!1,maxMemoryUsage:512},paths:{userData:n.app.getPath("userData"),temp:n.app.getPath("temp"),downloads:n.app.getPath("downloads"),documents:n.app.getPath("documents")}},H=o=>{const e=process.platform==="darwin",t=[...e?[{label:c.name,submenu:[{label:`About ${c.name}`,click:o.onAbout},{type:"separator"},{label:"Preferences...",accelerator:"Cmd+,",click:o.onPreferences},{type:"separator"},{label:"Services",role:"services",submenu:[]},{type:"separator"},{label:`Hide ${c.name}`,accelerator:"Cmd+H",role:"hide"},{label:"Hide Others",accelerator:"Cmd+Shift+H",role:"hideothers"},{label:"Show All",role:"unhide"},{type:"separator"},{label:`Quit ${c.name}`,accelerator:"Cmd+Q",click:o.onQuit}]}]:[],{label:"File",submenu:[{label:"New Project",accelerator:"CmdOrCtrl+N",click:o.onNewProject},{label:"Open G-code File...",accelerator:"CmdOrCtrl+O",click:o.onOpenFile},{type:"separator"},{label:"Save",accelerator:"CmdOrCtrl+S",click:o.onSave},{label:"Save As...",accelerator:"CmdOrCtrl+Shift+S",click:o.onSaveAs},{type:"separator"},{label:"Recent Files",submenu:[{label:"No recent files",enabled:!1}]},{type:"separator"},{label:"Import Settings...",click:()=>{n.dialog.showMessageBox({type:"info",title:"Import Settings",message:"Settings import feature coming soon!"})}},{label:"Export Settings...",click:()=>{n.dialog.showMessageBox({type:"info",title:"Export Settings",message:"Settings export feature coming soon!"})}},{type:"separator"},...e?[]:[{label:"Exit",accelerator:"Ctrl+Q",click:o.onQuit}]]},{label:"Machine",submenu:[{label:"Connect",accelerator:"CmdOrCtrl+Shift+C",click:()=>{}},{label:"Disconnect",accelerator:"CmdOrCtrl+Shift+D",click:()=>{}},{label:"Home Machine",accelerator:"CmdOrCtrl+H",click:()=>{}},{type:"separator"},{label:"Jog Controls",submenu:[{label:"Jog X+",accelerator:"Right",click:()=>{}},{label:"Jog X-",accelerator:"Left",click:()=>{}},{label:"Jog Y+",accelerator:"Up",click:()=>{}},{label:"Jog Y-",accelerator:"Down",click:()=>{}},{label:"Jog Z+",accelerator:"PageUp",click:()=>{}},{label:"Jog Z-",accelerator:"PageDown",click:()=>{}}]},{type:"separator"},{label:"Machine Settings...",click:()=>{}}]},{label:"Tools",submenu:[...e?[]:[{label:"Preferences...",accelerator:"Ctrl+,",click:o.onPreferences},{type:"separator"}],{label:"Export Logs...",click:()=>{}},{label:"Reset Settings...",click:()=>{n.dialog.showMessageBox({type:"warning",title:"Reset Settings",message:"Are you sure you want to reset all settings to default?",detail:"This action cannot be undone.",buttons:["Cancel","Reset Settings"],defaultId:0,cancelId:0}).then(r=>{r.response})}}]},{label:"View",submenu:[{label:"Reload",accelerator:"CmdOrCtrl+R",role:"reload"},{label:"Force Reload",accelerator:"CmdOrCtrl+Shift+R",role:"forceReload"},{label:"Toggle Developer Tools",accelerator:e?"Alt+Cmd+I":"Ctrl+Shift+I",role:"toggleDevTools"},{type:"separator"},{label:"Actual Size",accelerator:"CmdOrCtrl+0",role:"resetZoom"},{label:"Zoom In",accelerator:"CmdOrCtrl+Plus",role:"zoomIn"},{label:"Zoom Out",accelerator:"CmdOrCtrl+-",role:"zoomOut"},{type:"separator"},{label:"Toggle Fullscreen",accelerator:e?"Ctrl+Cmd+F":"F11",role:"togglefullscreen"}]},{label:"Window",submenu:[{label:"Minimize",accelerator:"CmdOrCtrl+M",role:"minimize"},{label:"Close",accelerator:"CmdOrCtrl+W",role:"close"},...e?[{type:"separator"},{label:"Bring All to Front",role:"front"}]:[]]},{label:"Help",submenu:[{label:"Check for Updates...",click:()=>{n.dialog.showMessageBox({type:"info",title:"Updates",message:"Auto-update feature coming soon!"})}},{label:"Release Notes...",click:()=>{n.shell.openExternal(`${c.repository}/releases`)}},{type:"separator"},{label:"Documentation",click:()=>{n.shell.openExternal(`${c.homepage}/docs`)}},{label:"Report Issue...",click:()=>{n.shell.openExternal(`${c.repository}/issues/new`)}},{type:"separator"},...e?[]:[{label:`About ${c.name}`,click:o.onAbout}]]}];return n.Menu.buildFromTemplate(t)};class B{constructor(){this.windows=new Map}createWindow(e,t){if(this.windows.has(e)){const s=this.windows.get(e);if(s&&!s.isDestroyed())return s.focus(),s}const r=new n.BrowserWindow(t);return this.windows.set(e,r),r.on("closed",()=>{this.windows.delete(e)}),this.setupWindowEvents(r,e),r}getWindow(e){const t=this.windows.get(e);return t&&!t.isDestroyed()?t:null}closeWindow(e){const t=this.getWindow(e);return t?(t.close(),!0):!1}removeWindow(e){this.windows.delete(e)}getAllWindows(){const e=new Map;for(const[t,r]of this.windows.entries())r.isDestroyed()||e.set(t,r);return e}focusWindow(e){const t=this.getWindow(e);return t?(t.isMinimized()&&t.restore(),t.focus(),!0):!1}hasWindow(e){const t=this.windows.get(e);return t?!t.isDestroyed():!1}getWindowCount(){return this.getAllWindows().size}closeAllWindows(){for(const[e,t]of this.windows.entries())t.isDestroyed()||t.close();this.windows.clear()}setupWindowEvents(e,t){e.once("ready-to-show",()=>{v&&console.log(`Window '${t}' is ready to show`)}),e.on("focus",()=>{v&&console.log(`Window '${t}' focused`)}),e.on("blur",()=>{v&&console.log(`Window '${t}' blurred`)}),e.on("minimize",()=>{v&&console.log(`Window '${t}' minimized`)}),e.on("restore",()=>{v&&console.log(`Window '${t}' restored`)}),e.on("maximize",()=>{v&&console.log(`Window '${t}' maximized`)}),e.on("unmaximize",()=>{v&&console.log(`Window '${t}' unmaximized`)}),e.on("resize",()=>{if(v){const[r,s]=e.getSize();console.log(`Window '${t}' resized to ${r}x${s}`)}}),e.on("move",()=>{if(v){const[r,s]=e.getPosition();console.log(`Window '${t}' moved to ${r},${s}`)}}),e.on("enter-full-screen",()=>{v&&console.log(`Window '${t}' entered full screen`)}),e.on("leave-full-screen",()=>{v&&console.log(`Window '${t}' left full screen`)}),e.on("unresponsive",()=>{console.warn(`Window '${t}' became unresponsive`)}),e.on("responsive",()=>{console.log(`Window '${t}' became responsive again`)}),e.on("closed",()=>{v&&console.log(`Window '${t}' closed`),this.removeWindow(t)})}loadContent(e,t){if(v){const r=t?`http://localhost:5173${t}`:"http://localhost:5173";e.loadURL(r)}else{const r=h.join(__dirname,"../../../dist/index.html");t?e.loadFile(r,{hash:t}):e.loadFile(r)}}}class Q{constructor(){this.preferencesPath=h.join(c.paths.userData,"preferences.json"),this.defaultPreferences={general:{language:"en",theme:"system",autoSave:!0,checkForUpdates:!0},machine:{defaultPort:"",baudRate:115200,jogIncrements:[.1,1,10,100],jogFeedRate:1e3,homingEnabled:!0,softLimitsEnabled:!0},interface:{showStatusBar:!0,showToolbar:!0,compactMode:!1,units:"mm"},advanced:{enableLogging:!0,logLevel:"info",maxLogFiles:5,enableCrashReporting:!0}},this.preferences={...this.defaultPreferences}}async load(){try{const e=await u.readFile(this.preferencesPath,"utf-8"),t=JSON.parse(e);this.preferences=this.mergeWithDefaults(t),console.log("Preferences loaded successfully")}catch(e){e.code==="ENOENT"?(console.log("No preferences file found, using defaults"),await this.save()):(console.error("Failed to load preferences:",e),this.preferences={...this.defaultPreferences})}}async save(){try{await u.mkdir(h.dirname(this.preferencesPath),{recursive:!0}),await u.writeFile(this.preferencesPath,JSON.stringify(this.preferences,null,2),"utf-8"),console.log("Preferences saved successfully")}catch(e){throw console.error("Failed to save preferences:",e),e}}get(){return{...this.preferences}}async set(e){this.preferences=this.mergeDeep(this.preferences,e),await this.save()}async reset(){this.preferences={...this.defaultPreferences},await this.save(),console.log("Preferences reset to defaults")}getSection(e){return{...this.preferences[e]}}async setSection(e,t){this.preferences[e]={...this.preferences[e],...t},await this.save()}validate(e){const t=[];try{if(e.general){const{language:r,theme:s,autoSave:i,checkForUpdates:a}=e.general;r&&typeof r!="string"&&t.push("Language must be a string"),s&&!["light","dark","system"].includes(s)&&t.push("Theme must be one of: light, dark, system"),i!==void 0&&typeof i!="boolean"&&t.push("Auto-save must be a boolean"),a!==void 0&&typeof a!="boolean"&&t.push("Check for updates must be a boolean")}if(e.machine){const{baudRate:r,jogIncrements:s,jogFeedRate:i}=e.machine;r&&(typeof r!="number"||r<=0)&&t.push("Baud rate must be a positive number"),s&&(Array.isArray(s)?s.every(a=>typeof a=="number"&&a>0)||t.push("All jog increments must be positive numbers"):t.push("Jog increments must be an array")),i&&(typeof i!="number"||i<=0)&&t.push("Jog feed rate must be a positive number")}if(e.interface){const{units:r}=e.interface;r&&!["mm","inches"].includes(r)&&t.push("Units must be either mm or inches")}if(e.advanced){const{logLevel:r,maxLogFiles:s}=e.advanced;r&&!["error","warn","info","debug"].includes(r)&&t.push("Log level must be one of: error, warn, info, debug"),s&&(typeof s!="number"||s<=0)&&t.push("Max log files must be a positive number")}}catch{t.push("Invalid preferences structure")}return{valid:t.length===0,errors:t}}mergeWithDefaults(e){return this.mergeDeep(this.defaultPreferences,e)}mergeDeep(e,t){const r={...e};return this.isObject(e)&&this.isObject(t)&&Object.keys(t).forEach(s=>{this.isObject(t[s])?s in e?r[s]=this.mergeDeep(e[s],t[s]):Object.assign(r,{[s]:t[s]}):Object.assign(r,{[s]:t[s]})}),r}isObject(e){return e&&typeof e=="object"&&!Array.isArray(e)}}class J{constructor(){this.maxLogSize=10*1024*1024,this.maxLogFiles=5,this.errorLogPath=h.join(c.paths.userData,"logs","errors.log"),this.initializeErrorHandling()}initializeErrorHandling(){process.on("uncaughtException",e=>{console.error("Uncaught Exception:",e),this.logError({message:e.message,stack:e.stack,code:"UNCAUGHT_EXCEPTION",timestamp:new Date,context:"Main Process",version:c.version,platform:process.platform,arch:process.arch}),this.showErrorDialog("Critical Error","An unexpected error occurred. The application may become unstable.",e.message)}),process.on("unhandledRejection",(e,t)=>{console.error("Unhandled Promise Rejection:",e),this.logError({message:e instanceof Error?e.message:String(e),stack:e instanceof Error?e.stack:void 0,code:"UNHANDLED_REJECTION",timestamp:new Date,context:"Main Process Promise",version:c.version,platform:process.platform,arch:process.arch})}),process.on("warning",e=>{console.warn("Process Warning:",e),this.logError({message:e.message,stack:e.stack,code:"PROCESS_WARNING",timestamp:new Date,context:"Main Process Warning",version:c.version,platform:process.platform,arch:process.arch})})}async logError(e){try{await u.mkdir(h.dirname(this.errorLogPath),{recursive:!0});const t={timestamp:e.timestamp.toISOString(),level:"ERROR",message:e.message,stack:e.stack,code:e.code,context:e.context,version:e.version,platform:e.platform,arch:e.arch,userId:e.userId},r=JSON.stringify(t)+`
`;await u.writeFile(this.errorLogPath,r,{flag:"a"}),await this.rotateLogs(),console.error("Error logged:",t)}catch(t){console.error("Failed to log error:",t)}}showErrorDialog(e,t,r){const s={type:"error",title:e,message:t,detail:r,buttons:["OK","Report Issue","View Logs"],defaultId:0};n.dialog.showMessageBox(s).then(i=>{switch(i.response){case 1:this.openIssueReporter();break;case 2:this.openLogsFolder();break}})}handleRendererError(e,t){this.logError({message:e.message||"Renderer Error",stack:e.stack||(t==null?void 0:t.componentStack),code:"RENDERER_ERROR",timestamp:new Date,context:"Renderer Process",version:c.version,platform:process.platform,arch:process.arch}),n.BrowserWindow.getAllWindows().forEach(s=>{s.isDestroyed()||s.webContents.send("app:error",{error:e.message,stack:e.stack})})}handleIpcError(e,t,r){this.logError({message:`IPC Error in channel '${e}': ${t.message}`,stack:t.stack,code:"IPC_ERROR",timestamp:new Date,context:`IPC Channel: ${e}`,version:c.version,platform:process.platform,arch:process.arch})}handleSerialError(e,t){this.logError({message:`Serial Port Error on '${e}': ${t.message}`,stack:t.stack,code:"SERIAL_ERROR",timestamp:new Date,context:`Serial Port: ${e}`,version:c.version,platform:process.platform,arch:process.arch})}handleFileError(e,t,r){this.logError({message:`File ${e} Error on '${t}': ${r.message}`,stack:r.stack,code:"FILE_ERROR",timestamp:new Date,context:`File Operation: ${e}`,version:c.version,platform:process.platform,arch:process.arch})}async createErrorReport(){try{const e={timestamp:new Date().toISOString(),application:{name:c.name,version:c.version,platform:process.platform,arch:process.arch,nodeVersion:process.version,electronVersion:process.versions.electron},system:{totalMemory:require("os").totalmem(),freeMemory:require("os").freemem(),cpus:require("os").cpus(),uptime:require("os").uptime()},logs:await this.getRecentLogs(50)},t=h.join(c.paths.userData,"error-reports",`error-report-${Date.now()}.json`);return await u.mkdir(h.dirname(t),{recursive:!0}),await u.writeFile(t,JSON.stringify(e,null,2)),t}catch(e){throw console.error("Failed to create error report:",e),e}}async getRecentLogs(e){try{return(await(await import("fs/promises")).readFile(this.errorLogPath,"utf-8")).trim().split(`
`).slice(-e).map(a=>{try{return JSON.parse(a)}catch{return{raw:a}}})}catch{return[]}}async rotateLogs(){try{const e=await import("fs/promises");if((await e.stat(this.errorLogPath)).size>this.maxLogSize){const r=new Date().toISOString().replace(/[:.]/g,"-"),s=this.errorLogPath.replace(".log",`-${r}.log`);await e.rename(this.errorLogPath,s),await this.cleanupOldLogs()}}catch(e){console.error("Failed to rotate logs:",e)}}async cleanupOldLogs(){try{const e=await import("fs/promises"),t=h.dirname(this.errorLogPath),s=(await e.readdir(t)).filter(i=>i.startsWith("errors-")&&i.endsWith(".log")).map(i=>({name:i,path:h.join(t,i)})).sort((i,a)=>a.name.localeCompare(i.name));if(s.length>this.maxLogFiles){const i=s.slice(this.maxLogFiles);for(const a of i)await e.unlink(a.path)}}catch(e){console.error("Failed to cleanup old logs:",e)}}openIssueReporter(){const e=require("electron").shell,t=`${c.repository}/issues/new?template=bug_report.md`;e.openExternal(t)}openLogsFolder(){require("electron").shell.showItemInFolder(this.errorLogPath)}}class _{constructor(){this.isSetup=!1}setup(){if(!(this.isSetup||!c.features.crashReporting))try{n.crashReporter.start({productName:c.name,companyName:c.author,submitURL:"",uploadToServer:!1,ignoreSystemCrashHandler:!1,rateLimit:!1,compress:!0,extra:{version:c.version,platform:process.platform,arch:process.arch,nodeVersion:process.version,electronVersion:process.versions.electron,timestamp:new Date().toISOString()}}),this.isSetup=!0,console.log("Crash reporter initialized")}catch(e){console.error("Failed to initialize crash reporter:",e)}}addExtraParameter(e,t){if(this.isSetup)try{n.crashReporter.addExtraParameter(e,t)}catch(r){console.error("Failed to add crash reporter parameter:",r)}}removeExtraParameter(e){if(this.isSetup)try{n.crashReporter.removeExtraParameter(e)}catch(t){console.error("Failed to remove crash reporter parameter:",t)}}getParameters(){if(this.isSetup)try{return n.crashReporter.getParameters()}catch(e){return console.error("Failed to get crash reporter parameters:",e),{}}return{}}simulateCrash(){process.env.NODE_ENV==="development"?(console.log("Simulating crash for testing purposes"),process.crash()):console.warn("Crash simulation is only available in development mode")}}class q{constructor(){this.isQuitting=!1,this.beforeQuitHandlers=[],this.willQuitHandlers=[]}onReady(){console.log(`${c.name} v${c.version} is ready`),process.platform==="win32"&&n.app.setAppUserModelId(c.name),this.handleSingleInstance(),this.setupPowerMonitor()}onBeforeQuit(){console.log("Application is about to quit"),this.isQuitting=!0,this.executeHandlers(this.beforeQuitHandlers)}onWillQuit(e){console.log("Application will quit"),this.willQuitHandlers.length>0&&(e.preventDefault(),this.executeHandlers(this.willQuitHandlers).then(()=>{n.app.quit()}).catch(t=>{console.error("Error during quit handlers:",t),n.app.quit()}))}addBeforeQuitHandler(e){this.beforeQuitHandlers.push(e)}addWillQuitHandler(e){this.willQuitHandlers.push(e)}isApplicationQuitting(){return this.isQuitting}handleSingleInstance(){n.app.requestSingleInstanceLock()?n.app.on("second-instance",(t,r,s)=>{console.log("Second instance attempted to run");const a=n.BrowserWindow.getAllWindows().find(m=>!m.isDestroyed());a&&(a.isMinimized()&&a.restore(),a.focus())}):(console.log("Another instance is already running"),n.app.quit())}setupPowerMonitor(){try{const{powerMonitor:e}=require("electron");e.on("suspend",()=>{console.log("System is going to sleep")}),e.on("resume",()=>{console.log("System has resumed")}),e.on("on-ac",()=>{console.log("System is on AC power")}),e.on("on-battery",()=>{console.log("System is on battery power")}),e.on("shutdown",()=>{console.log("System is shutting down")}),e.on("lock-screen",()=>{console.log("System is locked")}),e.on("unlock-screen",()=>{console.log("System is unlocked")})}catch(e){console.warn("Power monitor not available:",e)}}async executeHandlers(e){for(const t of e)try{await t()}catch(r){console.error("Error executing lifecycle handler:",r)}}async gracefulShutdown(){console.log("Initiating graceful shutdown");try{const e=n.BrowserWindow.getAllWindows();for(const t of e)t.isDestroyed()||t.close();await new Promise(t=>setTimeout(t,1e3)),await this.savePendingData(),console.log("Graceful shutdown completed")}catch(e){console.error("Error during graceful shutdown:",e)}}async savePendingData(){console.log("Saving pending data...")}}class G extends x.EventEmitter{constructor(){super(),this.port=null,this.parser=null,this.isConnected=!1,this.currentPortPath=null,this.reconnectTimer=null,this.connectionOptions=null,this.commandQueue=[],this.isProcessingQueue=!1,this.responseTimeout=5e3,this.setupEventHandlers()}async listPorts(){try{return(await E.SerialPort.list()).map(t=>({path:t.path,manufacturer:t.manufacturer,serialNumber:t.serialNumber,pnpId:t.pnpId,locationId:t.locationId,vendorId:t.vendorId,productId:t.productId}))}catch(e){throw console.error("Failed to list serial ports:",e),e}}async connectToPort(e,t){try{this.isConnected&&await this.disconnectFromPort(),console.log(`Connecting to serial port: ${e}`,t),this.port=new E.SerialPort({path:e,baudRate:t.baudRate,dataBits:t.dataBits||8,stopBits:t.stopBits||1,parity:t.parity||"none",rtscts:t.rtscts||!1,xon:t.xon||!1,xoff:t.xoff||!1,xany:t.xany||!1,autoOpen:!1}),this.parser=this.port.pipe(new j.ReadlineParser({delimiter:`\r
`})),this.setupPortEventListeners(),await new Promise((r,s)=>{this.port.open(i=>{i?s(i):r()})}),this.currentPortPath=e,this.connectionOptions=t,this.isConnected=!0,console.log(`Successfully connected to ${e}`),this.emit("connected",{port:e}),this.emit("statusChange",this.getConnectionStatus()),this.processCommandQueue()}catch(r){throw console.error(`Failed to connect to port ${e}:`,r),this.cleanupConnection(),r}}async disconnectFromPort(){try{this.reconnectTimer&&(clearTimeout(this.reconnectTimer),this.reconnectTimer=null),this.port&&this.port.isOpen&&(console.log(`Disconnecting from port: ${this.currentPortPath}`),await new Promise((e,t)=>{this.port.close(r=>{r?t(r):e()})})),this.cleanupConnection(),console.log("Successfully disconnected from serial port")}catch(e){throw console.error("Failed to disconnect from port:",e),this.cleanupConnection(),e}}async sendCommand(e){return new Promise((t,r)=>{if(!this.isConnected||!this.port){r(new Error("Not connected to any port"));return}this.commandQueue.push({command:e,resolve:t,reject:r}),this.isProcessingQueue||this.processCommandQueue()})}async sendGCode(e){for(const t of e){const r=t.trim();if(r&&!r.startsWith(";"))try{await this.sendCommand(r),await new Promise(s=>setTimeout(s,50))}catch(s){throw console.error(`Failed to send G-code line: ${r}`,s),s}}}getConnectionStatus(){var e,t,r,s;return{isOpen:this.isConnected,path:this.currentPortPath,baudRate:((e=this.connectionOptions)==null?void 0:e.baudRate)||0,dataBits:((t=this.connectionOptions)==null?void 0:t.dataBits)||8,stopBits:((r=this.connectionOptions)==null?void 0:r.stopBits)||1,parity:((s=this.connectionOptions)==null?void 0:s.parity)||"none"}}getPortInfo(){return this.currentPortPath?{path:this.currentPortPath}:null}setupEventHandlers(){this.on("error",e=>{console.error("SerialManager error:",e)}),this.on("disconnected",()=>{console.log("SerialManager disconnected event")})}setupPortEventListeners(){!this.port||!this.parser||(this.parser.on("data",e=>{console.log("Received:",e),this.emit("dataReceived",e),this.handleResponse(e)}),this.port.on("open",()=>{console.log("Serial port opened")}),this.port.on("close",()=>{console.log("Serial port closed"),this.handlePortClosed()}),this.port.on("error",e=>{console.error("Serial port error:",e),this.emit("error",e),this.handlePortError(e)}),this.port.on("drain",()=>{console.log("Serial port drained")}))}async processCommandQueue(){if(!(this.isProcessingQueue||this.commandQueue.length===0)){for(this.isProcessingQueue=!0;this.commandQueue.length>0&&this.isConnected;){const{command:e,resolve:t,reject:r}=this.commandQueue.shift();try{const s=await this.executeCommand(e);t(s)}catch(s){r(s)}}this.isProcessingQueue=!1}}async executeCommand(e){return new Promise((t,r)=>{if(!this.port||!this.isConnected){r(new Error("Port not connected"));return}let s,i;i=a=>{clearTimeout(s),this.removeListener("dataReceived",i),t(a)},s=setTimeout(()=>{this.removeListener("dataReceived",i),r(new Error(`Command timeout: ${e}`))},this.responseTimeout),this.on("dataReceived",i),this.port.write(e+`
`,a=>{a&&(clearTimeout(s),this.removeListener("dataReceived",i),r(a))})})}handleResponse(e){e.startsWith("ok")?console.log("Command acknowledged"):e.startsWith("error:")?(console.error("Machine error:",e),this.emit("machineError",e)):e.startsWith("<")&&e.endsWith(">")?(console.log("Status report:",e),this.emit("statusReport",e)):e.startsWith("ALARM:")?(console.warn("Machine alarm:",e),this.emit("alarm",e)):e.startsWith("$")&&(console.log("Machine info:",e),this.emit("machineInfo",e))}handlePortClosed(){this.isConnected&&(console.log("Port unexpectedly closed, attempting to reconnect..."),this.isConnected=!1,this.emit("disconnected",{port:this.currentPortPath}),this.emit("statusChange",this.getConnectionStatus()),this.attemptReconnect())}handlePortError(e){console.error("Port error:",e),this.isConnected=!1,this.emit("statusChange",this.getConnectionStatus()),this.attemptReconnect()}attemptReconnect(){this.reconnectTimer||!this.currentPortPath||!this.connectionOptions||(this.reconnectTimer=setTimeout(async()=>{try{console.log("Attempting to reconnect..."),await this.connectToPort(this.currentPortPath,this.connectionOptions),console.log("Reconnected successfully")}catch(e){console.error("Reconnection failed:",e),this.reconnectTimer=null,this.attemptReconnect()}},5e3))}cleanupConnection(){for(this.isConnected=!1,this.currentPortPath=null,this.connectionOptions=null,this.port=null,this.parser=null;this.commandQueue.length>0;){const{reject:e}=this.commandQueue.shift();e(new Error("Connection closed"))}this.isProcessingQueue=!1,this.emit("disconnected",{port:this.currentPortPath}),this.emit("statusChange",this.getConnectionStatus())}async destroy(){this.reconnectTimer&&(clearTimeout(this.reconnectTimer),this.reconnectTimer=null),this.isConnected&&await this.disconnectFromPort(),this.removeAllListeners()}}let F=null;function V(o){F=o}function Z(){n.ipcMain.handle("serial:list-ports",async()=>{try{const r=(await E.SerialPort.list()).map(i=>({path:i.path,manufacturer:i.manufacturer||"Unknown",serialNumber:i.serialNumber,pnpId:i.pnpId,locationId:i.locationId,vendorId:i.vendorId,productId:i.productId}));return console.log("Available serial ports:",r),n.BrowserWindow.getAllWindows().forEach(i=>{i.isDestroyed()||i.webContents.send("serial:ports-changed",r)}),r}catch(t){throw console.error("Failed to list serial ports:",t),t}}),n.ipcMain.handle("serial:port-status",async(t,{port:r})=>{try{if(!F)return{isOpen:!1,path:r,baudRate:0,dataBits:8,stopBits:1,parity:"none"};const s=F.getConnectionStatus();return{isOpen:s.isOpen&&s.path===r,path:r,baudRate:s.baudRate,dataBits:s.dataBits,stopBits:s.stopBits,parity:s.parity}}catch(s){return console.error("Failed to get port status:",s),{isOpen:!1,path:r,baudRate:0,dataBits:8,stopBits:1,parity:"none"}}}),n.ipcMain.handle("serial:test-port",async(t,{port:r,baudRate:s=115200})=>{try{console.log(`Testing connectivity to port: ${r}`);const i=new E.SerialPort({path:r,baudRate:s,autoOpen:!1});return new Promise(a=>{const m=setTimeout(()=>{i.close(),a({success:!1,error:"Connection timeout"})},3e3);i.open(b=>{clearTimeout(m),b?a({success:!1,error:b.message}):i.close(()=>{a({success:!0,message:`Successfully connected to ${r} at ${s} baud`})})})})}catch(i){return console.error("Failed to test port:",i),{success:!1,error:i instanceof Error?i.message:"Unknown error"}}}),n.ipcMain.handle("serial:get-port-info",async(t,{port:r})=>{try{const i=(await E.SerialPort.list()).find(a=>a.path===r);if(!i)throw new Error(`Port ${r} not found`);return{path:i.path,manufacturer:i.manufacturer||"Unknown",serialNumber:i.serialNumber,pnpId:i.pnpId,locationId:i.locationId,vendorId:i.vendorId,productId:i.productId,friendlyName:i.friendlyName}}catch(s){throw console.error("Failed to get port info:",s),s}});let o=null,e=[];n.ipcMain.handle("serial:start-port-monitoring",async()=>o?{success:!0,message:"Port monitoring already active"}:(console.log("Starting serial port monitoring"),o=setInterval(async()=>{try{const t=await E.SerialPort.list(),r=t.map(i=>i.path).sort(),s=e.map(i=>i.path).sort();JSON.stringify(r)!==JSON.stringify(s)&&(console.log("Serial ports changed:",r),e=t,n.BrowserWindow.getAllWindows().forEach(a=>{a.isDestroyed()||a.webContents.send("serial:ports-changed",t)}))}catch(t){console.error("Error monitoring serial ports:",t)}},2e3),{success:!0,message:"Port monitoring started"})),n.ipcMain.handle("serial:stop-port-monitoring",async()=>(o&&(clearInterval(o),o=null,console.log("Serial port monitoring stopped")),{success:!0,message:"Port monitoring stopped"})),n.ipcMain.handle("serial:send-raw",async(t,{command:r})=>{try{if(!F)throw new Error("Serial manager not available");return console.log("Sending raw command:",r),{success:!0,response:await F.sendCommand(r)}}catch(s){return console.error("Failed to send raw command:",s),{success:!1,error:s instanceof Error?s.message:"Unknown error"}}}),n.ipcMain.handle("serial:send-gcode",async(t,{gcode:r})=>{try{if(!F)throw new Error("Serial manager not available");console.log("Sending G-code file");const s=r.split(`
`).filter(i=>i.trim()&&!i.trim().startsWith(";"));return await F.sendGCode(s),{success:!0,message:`Sent ${s.length} G-code lines`}}catch(s){return console.error("Failed to send G-code:",s),{success:!1,error:s instanceof Error?s.message:"Unknown error"}}}),console.log("Serial IPC handlers registered")}let g=null,w={isConnected:!1,port:null,position:{x:0,y:0,z:0},status:"idle",feedRate:1e3,spindleSpeed:0,workCoordinates:{x:0,y:0,z:0},machineCoordinates:{x:0,y:0,z:0}};function X(){g||(g=new G,V(g),g.on("connected",o=>{w.isConnected=!0,w.port=o.port,S(),A("serial:port-connected",o)}),g.on("disconnected",o=>{w.isConnected=!1,w.port=null,S(),A("serial:port-disconnected",o)}),g.on("statusReport",o=>{Y(o),S()}),g.on("alarm",o=>{w.status="alarm",S(),C("ALARM",o)}),g.on("error",o=>{C("CONNECTION_ERROR",o.message)}),g.on("machineError",o=>{C("MACHINE_ERROR",o)}))}function S(){n.BrowserWindow.getAllWindows().forEach(e=>{e.isDestroyed()||e.webContents.send("machine:state-changed",w)})}function C(o,e){n.BrowserWindow.getAllWindows().forEach(r=>{r.isDestroyed()||r.webContents.send("machine:error",{error:e,code:o})})}function A(o,e){n.BrowserWindow.getAllWindows().forEach(r=>{r.isDestroyed()||r.webContents.send(o,e)})}function Y(o){try{const e=o.slice(1,-1),t=e.split("|");if(t[0]){const a=t[0].toLowerCase();["idle","run","hold","alarm","door","check","home","sleep"].includes(a)&&(w.status=a)}const r=e.match(/MPos:([-\d.]+),([-\d.]+),([-\d.]+)/);r&&(w.machineCoordinates={x:parseFloat(r[1]),y:parseFloat(r[2]),z:parseFloat(r[3])});const s=e.match(/WPos:([-\d.]+),([-\d.]+),([-\d.]+)/);s&&(w.workCoordinates={x:parseFloat(s[1]),y:parseFloat(s[2]),z:parseFloat(s[3])},w.position={...w.workCoordinates});const i=e.match(/FS:([\d.]+),([\d.]+)/);i&&(w.feedRate=parseFloat(i[1]),w.spindleSpeed=parseFloat(i[2]))}catch(e){console.error("Failed to parse status report:",e)}}function K(){X(),n.ipcMain.handle("machine:connect",async(o,{port:e,baudRate:t=115200})=>{try{if(!g)throw new Error("Serial manager not initialized");console.log(`Attempting to connect to machine on port: ${e}`),await g.connectToPort(e,{baudRate:t,dataBits:8,stopBits:1,parity:"none",rtscts:!1});try{await g.sendCommand("$$"),await g.sendCommand("?")}catch(r){console.warn("Failed to send initial commands:",r)}return{success:!0}}catch(r){return console.error("Failed to connect to machine:",r),{success:!1,error:r instanceof Error?r.message:"Unknown error"}}}),n.ipcMain.handle("machine:disconnect",async o=>{try{if(!g)throw new Error("Serial manager not initialized");return console.log("Disconnecting from machine"),await g.disconnectFromPort(),{success:!0}}catch(e){return console.error("Failed to disconnect from machine:",e),{success:!1,error:e instanceof Error?e.message:"Unknown error"}}}),n.ipcMain.handle("machine:jog",async(o,e)=>{try{if(!g||!w.isConnected)throw new Error("Machine not connected");const{axis:t,direction:r,distance:s,feedRate:i=1e3}=e;console.log("Jog command:",e);const a=t.toUpperCase(),m=r*s,b=`G91 G0 ${a}${m} F${i}`;return await g.sendCommand(b),await g.sendCommand("?"),{success:!0,position:w.position}}catch(t){console.error("Jog command failed:",t);const r=t instanceof Error?t.message:"Unknown error";return C("JOG_FAILED",r),{success:!1,error:r}}}),n.ipcMain.handle("machine:home",async o=>{try{if(!g||!w.isConnected)throw new Error("Machine not connected");return console.log("Homing machine"),await g.sendCommand("$H"),await new Promise(e=>setTimeout(e,1e3)),await g.sendCommand("?"),{success:!0,position:w.position}}catch(e){console.error("Homing failed:",e);const t=e instanceof Error?e.message:"Unknown error";return C("HOME_FAILED",t),{success:!1,error:t}}}),n.ipcMain.handle("machine:status",async()=>w),console.log("Machine IPC handlers registered")}class ee{constructor(){this.recentFiles=[],this.maxRecentFiles=10,this.loadRecentFiles()}async openGCodeFile(){try{const e=await n.dialog.showOpenDialog({title:"Open G-code File",defaultPath:c.paths.documents,filters:[{name:"G-code Files",extensions:["gcode","nc","cnc","tap"]},{name:"Text Files",extensions:["txt"]},{name:"All Files",extensions:["*"]}],properties:["openFile"]});if(e.canceled||e.filePaths.length===0)return null;const t=e.filePaths[0],r=await u.readFile(t,"utf-8");return await this.addToRecentFiles(t,"gcode"),{path:t,content:r}}catch(e){throw console.error("Failed to open G-code file:",e),e}}async saveGCodeFile(e,t){try{let r=t;if(!r){const s=await n.dialog.showSaveDialog({title:"Save G-code File",defaultPath:h.join(c.paths.documents,"untitled.gcode"),filters:[{name:"G-code Files",extensions:["gcode"]},{name:"CNC Files",extensions:["nc","cnc"]},{name:"Text Files",extensions:["txt"]},{name:"All Files",extensions:["*"]}]});if(s.canceled||!s.filePath)return{success:!1,error:"Save cancelled"};r=s.filePath}return await u.mkdir(h.dirname(r),{recursive:!0}),await u.writeFile(r,e,"utf-8"),await this.addToRecentFiles(r,"gcode"),{success:!0,path:r}}catch(r){return console.error("Failed to save G-code file:",r),{success:!1,error:r instanceof Error?r.message:"Unknown error"}}}validateGCodeFile(e){const t=[],r=[],s=e.split(`
`);let i=0;for(let a=0;a<s.length;a++){const m=s[a].trim(),b=a+1;!m||m.startsWith(";")||m.startsWith("(")||(i++,!m.match(/^[GM]\d+/i)&&!m.match(/^[XYZ]/)&&!m.match(/^F\d+/)&&!m.match(/^S\d+/)&&r.push(`Line ${b}: Unrecognized command format: ${m}`),m.match(/M3\s*S\d*[5-9]\d{3}/i)&&r.push(`Line ${b}: High spindle speed detected: ${m}`),m.match(/G0.*[XYZ]\s*-?\d{3,}/i)&&r.push(`Line ${b}: Large rapid movement detected: ${m}`))}return{valid:t.length===0,errors:t,warnings:r,lineCount:i,estimatedTime:this.estimateExecutionTime(e)}}async openProject(){try{const e=await n.dialog.showOpenDialog({title:"Open Project",defaultPath:c.paths.documents,filters:[{name:"CNC Project Files",extensions:["cncproj"]},{name:"JSON Files",extensions:["json"]},{name:"All Files",extensions:["*"]}],properties:["openFile"]});if(e.canceled||e.filePaths.length===0)return null;const t=e.filePaths[0],r=await u.readFile(t,"utf-8"),s=JSON.parse(r);if(!s.name||!s.gcode)throw new Error("Invalid project file format");return await this.addToRecentFiles(t,"project"),{...s,filePath:t}}catch(e){throw console.error("Failed to open project file:",e),e}}async saveProject(e,t){try{let r=t;if(!r){const i=await n.dialog.showSaveDialog({title:"Save Project",defaultPath:h.join(c.paths.documents,`${e.name||"untitled"}.cncproj`),filters:[{name:"CNC Project Files",extensions:["cncproj"]},{name:"JSON Files",extensions:["json"]},{name:"All Files",extensions:["*"]}]});if(i.canceled||!i.filePath)return{success:!1,error:"Save cancelled"};r=i.filePath}const s={...e,metadata:{...e.metadata,modified:new Date,version:c.version}};return await u.mkdir(h.dirname(r),{recursive:!0}),await u.writeFile(r,JSON.stringify(s,null,2),"utf-8"),await this.addToRecentFiles(r,"project"),{success:!0,path:r}}catch(r){return console.error("Failed to save project file:",r),{success:!1,error:r instanceof Error?r.message:"Unknown error"}}}async exportSettings(e){try{const t=await n.dialog.showSaveDialog({title:"Export Settings",defaultPath:h.join(c.paths.documents,"cnc-settings.json"),filters:[{name:"Settings Files",extensions:["json"]},{name:"All Files",extensions:["*"]}]});if(t.canceled||!t.filePath)return{success:!1,error:"Export cancelled"};const r={settings:e,metadata:{exported:new Date,version:c.version,application:c.name}};return await u.writeFile(t.filePath,JSON.stringify(r,null,2),"utf-8"),{success:!0,path:t.filePath}}catch(t){return console.error("Failed to export settings:",t),{success:!1,error:t instanceof Error?t.message:"Unknown error"}}}async importSettings(){try{const e=await n.dialog.showOpenDialog({title:"Import Settings",defaultPath:c.paths.documents,filters:[{name:"Settings Files",extensions:["json"]},{name:"All Files",extensions:["*"]}],properties:["openFile"]});if(e.canceled||e.filePaths.length===0)return null;const t=e.filePaths[0],r=await u.readFile(t,"utf-8"),s=JSON.parse(r);if(!s.settings)throw new Error("Invalid settings file format");return s.settings}catch(e){throw console.error("Failed to import settings:",e),e}}getRecentFiles(){return[...this.recentFiles]}clearRecentFiles(){this.recentFiles=[],this.saveRecentFiles()}async showInFolder(e){try{n.shell.showItemInFolder(e)}catch(t){throw console.error("Failed to show file in folder:",t),t}}async getFileStats(e){try{const t=await u.stat(e);return{size:t.size,modified:t.mtime,created:t.birthtime}}catch(t){throw console.error("Failed to get file stats:",t),t}}async listDirectory(e){try{const t=await u.readdir(e,{withFileTypes:!0}),r=[];for(const s of t)try{const i=h.join(e,s.name),a=await u.stat(i);r.push({name:s.name,isDirectory:s.isDirectory(),size:a.size})}catch(i){console.warn(`Cannot access ${s.name}:`,i)}return r}catch(t){throw console.error("Failed to list directory:",t),t}}async addToRecentFiles(e,t){try{const r=await u.stat(e),s={path:e,name:h.basename(e),lastModified:r.mtime,size:r.size,type:t};this.recentFiles=this.recentFiles.filter(i=>i.path!==e),this.recentFiles.unshift(s),this.recentFiles=this.recentFiles.slice(0,this.maxRecentFiles),await this.saveRecentFiles()}catch(r){console.warn("Failed to add file to recent files:",r)}}async loadRecentFiles(){try{const e=h.join(c.paths.userData,"recent-files.json"),t=await u.readFile(e,"utf-8");this.recentFiles=JSON.parse(t),this.recentFiles=this.recentFiles.filter(r=>{try{return u.stat(r.path)}catch{return!1}})}catch{this.recentFiles=[]}}async saveRecentFiles(){try{const e=h.join(c.paths.userData,"recent-files.json");await u.mkdir(h.dirname(e),{recursive:!0}),await u.writeFile(e,JSON.stringify(this.recentFiles,null,2),"utf-8")}catch(e){console.error("Failed to save recent files:",e)}}estimateExecutionTime(e){return e.split(`
`).filter(r=>{const s=r.trim();return s&&!s.startsWith(";")&&!s.startsWith("(")}).length*1e3}}let d=null;function te(){d||(d=new ee,console.log("File manager initialized"))}function re(){te(),n.ipcMain.handle("file:open-gcode",async o=>{try{if(!d)throw new Error("File manager not initialized");return await d.openGCodeFile()}catch(e){throw console.error("Failed to open G-code file:",e),e}}),n.ipcMain.handle("file:save-gcode",async(o,{path:e,content:t})=>{try{if(!d)throw new Error("File manager not initialized");return await d.saveGCodeFile(t,e)}catch(r){return console.error("Failed to save G-code file:",r),{success:!1,error:r instanceof Error?r.message:"Unknown error"}}}),n.ipcMain.handle("file:recent-files",async()=>d?d.getRecentFiles():[]),n.ipcMain.handle("file:open-project",async o=>{try{if(!d)throw new Error("File manager not initialized");return await d.openProject()}catch(e){throw console.error("Failed to open project file:",e),e}}),n.ipcMain.handle("file:save-project",async(o,e)=>{try{if(!d)throw new Error("File manager not initialized");return await d.saveProject(e)}catch(t){return console.error("Failed to save project file:",t),{success:!1,error:t instanceof Error?t.message:"Unknown error"}}}),n.ipcMain.handle("file:export-settings",async(o,e)=>{try{if(!d)throw new Error("File manager not initialized");return await d.exportSettings(e)}catch(t){return console.error("Failed to export settings:",t),{success:!1,error:t instanceof Error?t.message:"Unknown error"}}}),n.ipcMain.handle("file:import-settings",async o=>{try{if(!d)throw new Error("File manager not initialized");return await d.importSettings()}catch(e){throw console.error("Failed to import settings:",e),e}}),n.ipcMain.handle("file:validate-gcode",async(o,{content:e})=>{try{if(!d)throw new Error("File manager not initialized");return d.validateGCodeFile(e)}catch(t){throw console.error("Failed to validate G-code:",t),t}}),n.ipcMain.handle("file:clear-recent",async()=>{try{if(!d)throw new Error("File manager not initialized");return d.clearRecentFiles(),{success:!0}}catch(o){return console.error("Failed to clear recent files:",o),{success:!1,error:o instanceof Error?o.message:"Unknown error"}}}),n.ipcMain.handle("file:show-in-folder",async(o,{path:e})=>{try{if(!d)throw new Error("File manager not initialized");return await d.showInFolder(e),{success:!0}}catch(t){return console.error("Failed to show file in folder:",t),{success:!1,error:t instanceof Error?t.message:"Unknown error"}}}),n.ipcMain.handle("file:get-stats",async(o,{path:e})=>{try{if(!d)throw new Error("File manager not initialized");return await d.getFileStats(e)}catch(t){throw console.error("Failed to get file stats:",t),t}}),n.ipcMain.handle("file:list-directory",async(o,{path:e})=>{try{if(!d)throw new Error("File manager not initialized");return await d.listDirectory(e)}catch(t){throw console.error("Failed to list directory:",t),t}}),console.log("File IPC handlers registered")}const D={general:{language:"en",theme:"system",autoSave:!0,checkForUpdates:!0},machine:{defaultPort:"",baudRate:115200,jogIncrements:[.1,1,10,100],jogFeedRate:1e3,homingEnabled:!0,softLimitsEnabled:!0},interface:{showStatusBar:!0,showToolbar:!0,compactMode:!1,units:"mm"},advanced:{enableLogging:!0,logLevel:"info",maxLogFiles:5,enableCrashReporting:!0}};let P={...D};function oe(){n.ipcMain.handle("preferences:get",async()=>P),n.ipcMain.handle("preferences:set",async(o,e)=>{try{return P=O(P,e),console.log("Preferences updated:",e),{success:!0}}catch(t){return console.error("Failed to set preferences:",t),{success:!1,error:t instanceof Error?t.message:"Unknown error"}}}),n.ipcMain.handle("preferences:reset",async()=>{try{return P={...D},console.log("Preferences reset to defaults"),{success:!0}}catch(o){return console.error("Failed to reset preferences:",o),{success:!1,error:o instanceof Error?o.message:"Unknown error"}}}),n.ipcMain.handle("preferences:get-section",async(o,e)=>{if(!["general","machine","interface","advanced"].includes(e))throw new Error(`Invalid preference section: ${e}`);return P[e]}),n.ipcMain.handle("preferences:set-section",async(o,e,t)=>{try{if(!["general","machine","interface","advanced"].includes(e))throw new Error(`Invalid preference section: ${e}`);return P[e]={...P[e],...t},console.log(`Preferences section '${e}' updated:`,t),{success:!0}}catch(r){return console.error(`Failed to set preference section '${e}':`,r),{success:!1,error:r instanceof Error?r.message:"Unknown error"}}}),n.ipcMain.handle("preferences:validate",async(o,e)=>{try{const t=se(e);return{valid:t.length===0,errors:t}}catch(t){return console.error("Failed to validate preferences:",t),{valid:!1,errors:[t instanceof Error?t.message:"Unknown validation error"]}}}),console.log("Preferences IPC handlers registered")}function O(o,e){const t={...o};return U(o)&&U(e)&&Object.keys(e).forEach(r=>{U(e[r])?r in o?t[r]=O(o[r],e[r]):Object.assign(t,{[r]:e[r]}):Object.assign(t,{[r]:e[r]})}),t}function U(o){return o&&typeof o=="object"&&!Array.isArray(o)}function se(o){const e=[];if(o.general){const{language:t,theme:r,autoSave:s,checkForUpdates:i}=o.general;t&&typeof t!="string"&&e.push("Language must be a string"),r&&!["light","dark","system"].includes(r)&&e.push("Theme must be one of: light, dark, system"),s!==void 0&&typeof s!="boolean"&&e.push("Auto-save must be a boolean"),i!==void 0&&typeof i!="boolean"&&e.push("Check for updates must be a boolean")}if(o.machine){const{baudRate:t,jogIncrements:r,jogFeedRate:s}=o.machine;t&&(typeof t!="number"||t<=0)&&e.push("Baud rate must be a positive number"),r&&(Array.isArray(r)?r.every(i=>typeof i=="number"&&i>0)||e.push("All jog increments must be positive numbers"):e.push("Jog increments must be an array")),s&&(typeof s!="number"||s<=0)&&e.push("Jog feed rate must be a positive number")}if(o.interface){const{units:t}=o.interface;t&&!["mm","inches"].includes(t)&&e.push("Units must be either mm or inches")}if(o.advanced){const{logLevel:t,maxLogFiles:r}=o.advanced;t&&!["error","warn","info","debug"].includes(t)&&e.push("Log level must be one of: error, warn, info, debug"),r&&(typeof r!="number"||r<=0)&&e.push("Max log files must be a positive number")}return e}function ne(){n.ipcMain.handle("system:get-info",async()=>{var o,e;try{const t=y.cpus();return{platform:y.platform(),arch:y.arch(),version:y.release(),totalMemory:y.totalmem(),freeMemory:y.freemem(),cpus:{model:((o=t[0])==null?void 0:o.model)||"Unknown",speed:((e=t[0])==null?void 0:e.speed)||0,cores:t.length},uptime:y.uptime()}}catch(t){throw console.error("Failed to get system info:",t),t}}),n.ipcMain.handle("system:get-platform",async()=>y.platform()),n.ipcMain.handle("system:get-arch",async()=>y.arch()),n.ipcMain.handle("utils:open-external",async(o,{url:e})=>{try{return await n.shell.openExternal(e),{success:!0}}catch(t){return console.error("Failed to open external URL:",t),{success:!1,error:t instanceof Error?t.message:"Unknown error"}}}),n.ipcMain.handle("utils:show-item-in-folder",async(o,{path:e})=>{try{return n.shell.showItemInFolder(e),{success:!0}}catch(t){return console.error("Failed to show item in folder:",t),{success:!1,error:t instanceof Error?t.message:"Unknown error"}}}),n.ipcMain.handle("system:get-app-info",async()=>({name:c.name,version:c.version,description:c.description,author:c.author,homepage:c.homepage})),n.ipcMain.handle("system:get-memory-usage",async()=>{try{const o=process.memoryUsage();return{rss:o.rss,heapTotal:o.heapTotal,heapUsed:o.heapUsed,external:o.external,arrayBuffers:o.arrayBuffers,systemTotal:y.totalmem(),systemFree:y.freemem()}}catch(o){throw console.error("Failed to get memory usage:",o),o}}),n.ipcMain.handle("system:get-performance-metrics",async()=>{try{return{uptime:process.uptime(),cpuUsage:process.cpuUsage(),memoryUsage:process.memoryUsage(),platform:y.platform(),arch:y.arch(),nodeVersion:process.version,electronVersion:process.versions.electron,chromeVersion:process.versions.chrome}}catch(o){throw console.error("Failed to get performance metrics:",o),o}}),n.ipcMain.handle("system:get-disk-usage",async()=>{try{return{available:0,total:0,used:0,percent:0}}catch(o){throw console.error("Failed to get disk usage:",o),o}}),n.ipcMain.handle("system:get-environment",async()=>({nodeEnv:process.env.NODE_ENV||"development",isDev:process.env.NODE_ENV==="development",userDataPath:c.paths.userData,tempPath:c.paths.temp,documentsPath:c.paths.documents,downloadsPath:c.paths.downloads})),console.log("System IPC handlers registered")}class ie extends x.EventEmitter{constructor(){super(),this.isMonitoring=!1,this.monitoringInterval=null,this.metricsHistory=[],this.maxHistorySize=100,this.monitoringIntervalMs=5e3,this.lastCpuUsage=process.cpuUsage(),this.warningCooldown=new Map,this.cooldownDuration=6e4,this.thresholds={cpuUsage:80,memoryUsage:85,memoryLeak:50*1024*1024,responseTime:1e3}}startMonitoring(){this.isMonitoring||(console.log("Starting performance monitoring"),this.isMonitoring=!0,this.monitoringInterval=setInterval(()=>{this.collectMetrics()},this.monitoringIntervalMs),this.emit("monitoring-started"))}stopMonitoring(){this.isMonitoring&&(console.log("Stopping performance monitoring"),this.isMonitoring=!1,this.monitoringInterval&&(clearInterval(this.monitoringInterval),this.monitoringInterval=null),this.emit("monitoring-stopped"))}async getCurrentMetrics(){var b,I;const e=y.cpus(),t=process.memoryUsage(),r=process.cpuUsage(this.lastCpuUsage),s=(r.user+r.system)/1e6/(this.monitoringIntervalMs/1e3)*100;this.lastCpuUsage=process.cpuUsage();const i=y.totalmem(),a=y.freemem(),m=i-a;return{timestamp:new Date,cpu:{usage:Math.min(s,100),cores:e.length,model:((b=e[0])==null?void 0:b.model)||"Unknown",speed:((I=e[0])==null?void 0:I.speed)||0},memory:{total:i,free:a,used:m,usagePercent:m/i*100,processMemory:{rss:t.rss,heapTotal:t.heapTotal,heapUsed:t.heapUsed,external:t.external,arrayBuffers:t.arrayBuffers}},system:{uptime:process.uptime(),loadAverage:y.loadavg()},electron:{version:process.versions.electron||"Unknown",nodeVersion:process.versions.node,chromeVersion:process.versions.chrome||"Unknown"}}}getMetricsHistory(e){return e?this.metricsHistory.slice(-e):[...this.metricsHistory]}getPerformanceSummary(){if(this.metricsHistory.length===0)return{averageCpuUsage:0,averageMemoryUsage:0,peakMemoryUsage:0,uptime:process.uptime(),metricsCount:0};const e=this.metricsHistory.map(r=>r.cpu.usage),t=this.metricsHistory.map(r=>r.memory.usagePercent);return{averageCpuUsage:e.reduce((r,s)=>r+s,0)/e.length,averageMemoryUsage:t.reduce((r,s)=>r+s,0)/t.length,peakMemoryUsage:Math.max(...t),uptime:process.uptime(),metricsCount:this.metricsHistory.length}}setThresholds(e){this.thresholds={...this.thresholds,...e},console.log("Performance thresholds updated:",this.thresholds)}getThresholds(){return{...this.thresholds}}checkPerformanceIssues(e){const t=Date.now();e.cpu.usage>this.thresholds.cpuUsage&&this.shouldEmitWarning("cpu-high",t)&&this.emit("performance-warning",{type:"cpu-high",message:`High CPU usage: ${e.cpu.usage.toFixed(1)}%`,value:e.cpu.usage,threshold:this.thresholds.cpuUsage,timestamp:e.timestamp}),e.memory.usagePercent>this.thresholds.memoryUsage&&this.shouldEmitWarning("memory-high",t)&&this.emit("performance-warning",{type:"memory-high",message:`High memory usage: ${e.memory.usagePercent.toFixed(1)}%`,value:e.memory.usagePercent,threshold:this.thresholds.memoryUsage,timestamp:e.timestamp}),this.checkMemoryLeak(e,t)}checkMemoryLeak(e,t){if(this.metricsHistory.length<12)return;const r=this.metricsHistory[this.metricsHistory.length-12],s=e.memory.processMemory.heapUsed-r.memory.processMemory.heapUsed;s>this.thresholds.memoryLeak&&this.shouldEmitWarning("memory-leak",t)&&this.emit("performance-warning",{type:"memory-leak",message:`Potential memory leak detected: ${(s/1024/1024).toFixed(1)}MB increase in 1 minute`,value:s,threshold:this.thresholds.memoryLeak,timestamp:e.timestamp})}shouldEmitWarning(e,t){const r=this.warningCooldown.get(e);return!r||t-r>this.cooldownDuration?(this.warningCooldown.set(e,t),!0):!1}async collectMetrics(){try{const e=await this.getCurrentMetrics();this.metricsHistory.push(e),this.metricsHistory.length>this.maxHistorySize&&(this.metricsHistory=this.metricsHistory.slice(-this.maxHistorySize)),this.checkPerformanceIssues(e),this.broadcastMetrics(e),this.emit("metrics-collected",e)}catch(e){console.error("Failed to collect performance metrics:",e),this.emit("error",e)}}broadcastMetrics(e){n.BrowserWindow.getAllWindows().forEach(r=>{r.isDestroyed()||r.webContents.send("performance:metrics-update",e)})}createPerformanceReport(){return{summary:this.getPerformanceSummary(),currentMetrics:this.metricsHistory[this.metricsHistory.length-1]||null,recentHistory:this.getMetricsHistory(20),thresholds:this.getThresholds(),warnings:[]}}destroy(){this.stopMonitoring(),this.removeAllListeners(),this.metricsHistory=[],this.warningCooldown.clear()}}let f=null;function ae(){f||(f=new ie,f.on("performance-warning",o=>{console.warn("Performance warning:",o)}),f.on("error",o=>{console.error("Performance monitor error:",o)}),console.log("Performance monitor initialized"))}function ce(){ae(),n.ipcMain.handle("performance:start-monitoring",async()=>{try{if(!f)throw new Error("Performance monitor not initialized");return f.startMonitoring(),{success:!0}}catch(o){return console.error("Failed to start performance monitoring:",o),{success:!1,error:o instanceof Error?o.message:"Unknown error"}}}),n.ipcMain.handle("performance:stop-monitoring",async()=>{try{if(!f)throw new Error("Performance monitor not initialized");return f.stopMonitoring(),{success:!0}}catch(o){return console.error("Failed to stop performance monitoring:",o),{success:!1,error:o instanceof Error?o.message:"Unknown error"}}}),n.ipcMain.handle("performance:get-current-metrics",async()=>{try{if(!f)throw new Error("Performance monitor not initialized");return await f.getCurrentMetrics()}catch(o){throw console.error("Failed to get current metrics:",o),o}}),n.ipcMain.handle("performance:get-metrics-history",async(o,{count:e})=>{try{if(!f)throw new Error("Performance monitor not initialized");return f.getMetricsHistory(e)}catch(t){throw console.error("Failed to get metrics history:",t),t}}),n.ipcMain.handle("performance:get-summary",async()=>{try{if(!f)throw new Error("Performance monitor not initialized");return f.getPerformanceSummary()}catch(o){throw console.error("Failed to get performance summary:",o),o}}),n.ipcMain.handle("performance:set-thresholds",async(o,{thresholds:e})=>{try{if(!f)throw new Error("Performance monitor not initialized");return f.setThresholds(e),{success:!0}}catch(t){return console.error("Failed to set performance thresholds:",t),{success:!1,error:t instanceof Error?t.message:"Unknown error"}}}),n.ipcMain.handle("performance:get-thresholds",async()=>{try{if(!f)throw new Error("Performance monitor not initialized");return f.getThresholds()}catch(o){throw console.error("Failed to get performance thresholds:",o),o}}),n.ipcMain.handle("performance:create-report",async()=>{try{if(!f)throw new Error("Performance monitor not initialized");return f.createPerformanceReport()}catch(o){throw console.error("Failed to create performance report:",o),o}}),console.log("Performance IPC handlers registered")}class le extends x.EventEmitter{constructor(){super(),this.checkTimer=null,this.status={checking:!1,available:!1,downloading:!1,downloaded:!1,error:null,info:null,progress:null},this.settings={autoDownload:!0,autoInstallOnAppQuit:!0,allowPrerelease:!1,allowDowngrade:!1,checkIntervalMs:24*60*60*1e3,provider:"github"},this.isEnabled=process.env.NODE_ENV==="production",this.initializeAutoUpdater()}initializeAutoUpdater(){if(!this.isEnabled){console.log("Auto-updater disabled in development mode");return}p.autoUpdater.autoDownload=this.settings.autoDownload,p.autoUpdater.autoInstallOnAppQuit=this.settings.autoInstallOnAppQuit,p.autoUpdater.allowPrerelease=this.settings.allowPrerelease,p.autoUpdater.allowDowngrade=this.settings.allowDowngrade,this.settings.url&&p.autoUpdater.setFeedURL({provider:this.settings.provider,url:this.settings.url}),this.setupEventHandlers(),console.log("Auto-updater initialized")}setupEventHandlers(){p.autoUpdater.on("checking-for-update",()=>{console.log("Checking for updates..."),this.status.checking=!0,this.status.error=null,this.broadcastStatus(),this.emit("checking-for-update")}),p.autoUpdater.on("update-available",e=>{console.log("Update available:",e.version),this.status.checking=!1,this.status.available=!0,this.status.info=e,this.broadcastStatus(),this.emit("update-available",e),this.settings.autoDownload||this.showUpdateAvailableDialog(e)}),p.autoUpdater.on("update-not-available",e=>{console.log("No updates available:",e.version),this.status.checking=!1,this.status.available=!1,this.status.info=e,this.broadcastStatus(),this.emit("update-not-available",e)}),p.autoUpdater.on("error",e=>{console.error("Auto-updater error:",e),this.status.checking=!1,this.status.downloading=!1,this.status.error=e.message,this.broadcastStatus(),this.emit("error",e)}),p.autoUpdater.on("download-progress",e=>{console.log(`Download progress: ${e.percent.toFixed(2)}%`),this.status.downloading=!0,this.status.progress=e,this.broadcastStatus(),this.emit("download-progress",e)}),p.autoUpdater.on("update-downloaded",e=>{console.log("Update downloaded:",e.version),this.status.downloading=!1,this.status.downloaded=!0,this.status.info=e,this.broadcastStatus(),this.emit("update-downloaded",e),this.showUpdateDownloadedDialog(e)})}async checkForUpdates(){if(!this.isEnabled)throw new Error("Auto-updater is disabled in development mode");if(this.status.checking)throw new Error("Update check already in progress");try{const e=await p.autoUpdater.checkForUpdates();return(e==null?void 0:e.updateInfo)||null}catch(e){throw console.error("Failed to check for updates:",e),e}}async downloadUpdate(){if(!this.isEnabled)throw new Error("Auto-updater is disabled in development mode");if(!this.status.available)throw new Error("No update available to download");if(this.status.downloading)throw new Error("Download already in progress");try{await p.autoUpdater.downloadUpdate()}catch(e){throw console.error("Failed to download update:",e),e}}quitAndInstall(){if(!this.isEnabled)throw new Error("Auto-updater is disabled in development mode");if(!this.status.downloaded)throw new Error("No update downloaded");console.log("Installing update and restarting..."),p.autoUpdater.quitAndInstall()}startPeriodicChecks(){if(!this.isEnabled){console.log("Periodic update checks disabled in development mode");return}this.checkTimer||(console.log(`Starting periodic update checks every ${this.settings.checkIntervalMs/1e3/60} minutes`),this.checkTimer=setInterval(()=>{this.checkForUpdates().catch(e=>{console.error("Periodic update check failed:",e)})},this.settings.checkIntervalMs),setTimeout(()=>{this.checkForUpdates().catch(e=>{console.error("Initial update check failed:",e)})},5e3))}stopPeriodicChecks(){this.checkTimer&&(clearInterval(this.checkTimer),this.checkTimer=null,console.log("Stopped periodic update checks"))}updateSettings(e){this.settings={...this.settings,...e},this.isEnabled&&(p.autoUpdater.autoDownload=this.settings.autoDownload,p.autoUpdater.autoInstallOnAppQuit=this.settings.autoInstallOnAppQuit,p.autoUpdater.allowPrerelease=this.settings.allowPrerelease,p.autoUpdater.allowDowngrade=this.settings.allowDowngrade,this.checkTimer&&(this.stopPeriodicChecks(),this.startPeriodicChecks())),console.log("Auto-updater settings updated:",this.settings)}getStatus(){return{...this.status}}getSettings(){return{...this.settings}}isUpdateEnabled(){return this.isEnabled}showUpdateAvailableDialog(e){const t={type:"info",title:"Update Available",message:`A new version (${e.version}) is available`,detail:"Would you like to download and install the update?",buttons:["Later","Download Now"],defaultId:1,cancelId:0};n.dialog.showMessageBox(t).then(r=>{r.response===1&&this.downloadUpdate().catch(s=>{console.error("Failed to start download:",s)})})}showUpdateDownloadedDialog(e){const t={type:"info",title:"Update Downloaded",message:`Version ${e.version} has been downloaded`,detail:"The update will be installed when you restart the application. Would you like to restart now?",buttons:["Restart Later","Restart Now"],defaultId:1,cancelId:0};n.dialog.showMessageBox(t).then(r=>{r.response===1&&this.quitAndInstall()})}broadcastStatus(){n.BrowserWindow.getAllWindows().forEach(t=>{t.isDestroyed()||t.webContents.send("updater:status-changed",this.status)})}async getReleaseNotes(e){try{return`Release notes for version ${e} are not yet available.`}catch(t){return console.error("Failed to get release notes:",t),null}}async forceCheckForUpdates(){if(!this.isEnabled)throw new Error("Auto-updater is disabled in development mode");try{p.autoUpdater.allowDowngrade=!0;const e=await p.autoUpdater.checkForUpdates();return p.autoUpdater.allowDowngrade=this.settings.allowDowngrade,(e==null?void 0:e.updateInfo)||null}catch(e){throw console.error("Failed to force check for updates:",e),e}}destroy(){this.stopPeriodicChecks(),this.removeAllListeners(),this.isEnabled&&p.autoUpdater.removeAllListeners(),console.log("Auto-updater destroyed")}}let l=null;function de(){l||(l=new le,l.on("checking-for-update",()=>{console.log("Auto-updater: Checking for updates")}),l.on("update-available",o=>{console.log("Auto-updater: Update available",o.version)}),l.on("update-not-available",o=>{console.log("Auto-updater: No updates available",o.version)}),l.on("error",o=>{console.error("Auto-updater error:",o)}),l.on("download-progress",o=>{console.log(`Auto-updater: Download progress ${o.percent.toFixed(1)}%`)}),l.on("update-downloaded",o=>{console.log("Auto-updater: Update downloaded",o.version)}),l.isUpdateEnabled()&&l.startPeriodicChecks(),console.log("Auto-updater initialized"))}function he(){de(),n.ipcMain.handle("updater:check-for-updates",async()=>{try{if(!l)throw new Error("Auto-updater not initialized");return await l.checkForUpdates()}catch(o){throw console.error("Failed to check for updates:",o),o}}),n.ipcMain.handle("updater:force-check-for-updates",async()=>{try{if(!l)throw new Error("Auto-updater not initialized");return await l.forceCheckForUpdates()}catch(o){throw console.error("Failed to force check for updates:",o),o}}),n.ipcMain.handle("updater:download-update",async()=>{try{if(!l)throw new Error("Auto-updater not initialized");return await l.downloadUpdate(),{success:!0}}catch(o){return console.error("Failed to download update:",o),{success:!1,error:o instanceof Error?o.message:"Unknown error"}}}),n.ipcMain.handle("updater:install-update",async()=>{try{if(!l)throw new Error("Auto-updater not initialized");return l.quitAndInstall(),{success:!0}}catch(o){return console.error("Failed to install update:",o),{success:!1,error:o instanceof Error?o.message:"Unknown error"}}}),n.ipcMain.handle("updater:get-status",async()=>{try{if(!l)throw new Error("Auto-updater not initialized");return l.getStatus()}catch(o){throw console.error("Failed to get updater status:",o),o}}),n.ipcMain.handle("updater:get-settings",async()=>{try{if(!l)throw new Error("Auto-updater not initialized");return l.getSettings()}catch(o){throw console.error("Failed to get updater settings:",o),o}}),n.ipcMain.handle("updater:update-settings",async(o,{settings:e})=>{try{if(!l)throw new Error("Auto-updater not initialized");return l.updateSettings(e),{success:!0}}catch(t){return console.error("Failed to update settings:",t),{success:!1,error:t instanceof Error?t.message:"Unknown error"}}}),n.ipcMain.handle("updater:start-periodic-checks",async()=>{try{if(!l)throw new Error("Auto-updater not initialized");return l.startPeriodicChecks(),{success:!0}}catch(o){return console.error("Failed to start periodic checks:",o),{success:!1,error:o instanceof Error?o.message:"Unknown error"}}}),n.ipcMain.handle("updater:stop-periodic-checks",async()=>{try{if(!l)throw new Error("Auto-updater not initialized");return l.stopPeriodicChecks(),{success:!0}}catch(o){return console.error("Failed to stop periodic checks:",o),{success:!1,error:o instanceof Error?o.message:"Unknown error"}}}),n.ipcMain.handle("updater:get-release-notes",async(o,{version:e})=>{try{if(!l)throw new Error("Auto-updater not initialized");return await l.getReleaseNotes(e)}catch(t){throw console.error("Failed to get release notes:",t),t}}),n.ipcMain.handle("updater:is-enabled",async()=>{try{return l?l.isUpdateEnabled():!1}catch(o){return console.error("Failed to check if updater is enabled:",o),!1}}),console.log("Updater IPC handlers registered")}class ue{constructor(){this.windowManager=new B,this.preferencesService=new Q,this.errorHandler=new J,this.crashReporter=new _,this.appLifecycle=new q,this.initializeApp()}initializeApp(){this.crashReporter.setup(),this.setupAppEvents(),this.setupIPC(),this.setupSecurity()}setupAppEvents(){n.app.whenReady().then(()=>{this.createMainWindow(),this.setupApplicationMenu(),this.appLifecycle.onReady(),n.app.on("activate",()=>{n.BrowserWindow.getAllWindows().length===0&&this.createMainWindow()})}),n.app.on("window-all-closed",()=>{process.platform!=="darwin"&&n.app.quit()}),n.app.on("before-quit",()=>{this.appLifecycle.onBeforeQuit()}),n.app.on("will-quit",e=>{this.appLifecycle.onWillQuit(e)}),n.app.on("certificate-error",(e,t,r,s,i,a)=>{v?(e.preventDefault(),a(!0)):a(!1)}),n.app.on("web-contents-created",(e,t)=>{t.on("new-window",(r,s)=>{r.preventDefault(),n.shell.openExternal(s)}),t.setWindowOpenHandler(({url:r})=>(n.shell.openExternal(r),{action:"deny"}))})}createMainWindow(){const e=this.windowManager.createWindow("main",{width:M.main.width,height:M.main.height,minWidth:M.main.minWidth,minHeight:M.main.minHeight,webPreferences:{nodeIntegration:!1,contextIsolation:!0,enableRemoteModule:!1,sandbox:!0,preload:h.join(__dirname,"../preload/preload.js"),additionalArguments:[`--app-version=${n.app.getVersion()}`]},icon:this.getAppIcon(),show:!1,titleBarStyle:process.platform==="darwin"?"hiddenInset":"default",webSecurity:!0,allowRunningInsecureContent:!1,experimentalFeatures:!1});v?(e.loadURL("http://localhost:5173"),process.env.NODE_ENV==="development"&&e.webContents.openDevTools()):e.loadFile(h.join(__dirname,"../../dist/index.html")),e.once("ready-to-show",()=>{e.show(),v&&e.focus()}),e.on("closed",()=>{this.windowManager.removeWindow("main")}),e.on("unresponsive",()=>{n.dialog.showErrorBox("Window Unresponsive","The application window has become unresponsive. Please restart the application.")}),e.on("responsive",()=>{console.log("Window is responsive again")})}setupApplicationMenu(){const e=H({onNewProject:()=>this.handleNewProject(),onOpenFile:()=>this.handleOpenFile(),onSave:()=>this.handleSave(),onSaveAs:()=>this.handleSaveAs(),onPreferences:()=>this.handlePreferences(),onAbout:()=>this.handleAbout(),onQuit:()=>this.handleQuit()});n.Menu.setApplicationMenu(e)}setupIPC(){K(),Z(),re(),oe(),ne(),ce(),he(),n.ipcMain.handle("app:get-version",()=>n.app.getVersion()),n.ipcMain.handle("app:get-path",(e,t)=>n.app.getPath(t)),n.ipcMain.handle("app:show-error-box",(e,t,r)=>{n.dialog.showErrorBox(t,r)})}setupSecurity(){n.app.on("web-contents-created",(e,t)=>{t.on("did-finish-load",()=>{t.insertCSS(`
          * {
            -webkit-user-select: text;
            -webkit-app-region: no-drag;
          }
        `)}),t.on("will-navigate",(r,s)=>{const i=new URL(s);i.origin!=="http://localhost:5173"&&i.origin!=="file://"&&r.preventDefault()})})}getAppIcon(){return process.platform==="win32"?h.join(__dirname,"../../../assets/icon.ico"):process.platform==="darwin"?h.join(__dirname,"../../../assets/icon.icns"):h.join(__dirname,"../../../assets/icon.png")}handleNewProject(){var e;(e=this.windowManager.getWindow("main"))==null||e.webContents.send("menu:new-project")}handleOpenFile(){var e;(e=this.windowManager.getWindow("main"))==null||e.webContents.send("menu:open-file")}handleSave(){var e;(e=this.windowManager.getWindow("main"))==null||e.webContents.send("menu:save")}handleSaveAs(){var e;(e=this.windowManager.getWindow("main"))==null||e.webContents.send("menu:save-as")}handlePreferences(){var e;(e=this.windowManager.getWindow("main"))==null||e.webContents.send("menu:preferences")}handleAbout(){n.dialog.showMessageBox(this.windowManager.getWindow("main"),{type:"info",title:"About CNC Jog Controls",message:`CNC Jog Controls v${n.app.getVersion()}`,detail:"Professional CNC machine control application built with Electron and React.",buttons:["OK"]})}handleQuit(){n.app.quit()}}new ue;
