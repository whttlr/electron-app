"use strict";var P=Object.create;var v=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var I=Object.getPrototypeOf,U=Object.prototype.hasOwnProperty;var A=(t,e,s,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of k(e))!U.call(t,o)&&o!==s&&v(t,o,{get:()=>e[o],enumerable:!(r=y(e,o))||r.enumerable});return t};var E=(t,e,s)=>(s=t!=null?P(I(t)):{},A(e||!t||!t.__esModule?v(s,"default",{value:t,enumerable:!0}):s,t));const n=require("electron"),w=require("path"),R=require("child_process"),g=require("electron-updater");function C(t){const e=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(t){for(const s in t)if(s!=="default"){const r=Object.getOwnPropertyDescriptor(t,s);Object.defineProperty(e,s,r.get?r:{enumerable:!0,get:()=>t[s]})}}return e.default=t,Object.freeze(e)}const b=C(w),$={},D=require("node-fetch");class _{constructor(){this.process=null,this.port=null,this.isReady=!1,this.baseUrl=null}async start(){console.log("🚀 Starting embedded API server...");try{this.port=await this.findAvailablePort(3e3);const e=this.getServerPath(),s={...process.env,PORT:this.port.toString(),NODE_ENV:"production",EMBEDDED_MODE:"true"};return this.process=R.spawn(process.execPath,[e],{env:s,stdio:["pipe","pipe","pipe"],detached:!1}),this.setupProcessHandlers(),await this.waitForServer(),this.baseUrl=`http://localhost:${this.port}`,this.isReady=!0,console.log(`✅ API server ready at ${this.baseUrl}`),this.baseUrl}catch(e){throw console.error("❌ Failed to start API server:",e),e}}getServerPath(){return n.app.isPackaged?w.join(process.resourcesPath,"api","src","server.js"):w.join(__dirname,"..","..","..","..","..","api","src","server.js")}setupProcessHandlers(){var e,s;this.process&&((e=this.process.stdout)==null||e.on("data",r=>{console.log(`[API] ${r.toString().trim()}`)}),(s=this.process.stderr)==null||s.on("data",r=>{console.error(`[API Error] ${r.toString().trim()}`)}),this.process.on("exit",r=>{console.log(`[API] Process exited with code ${r}`),this.isReady=!1}),this.process.on("error",r=>{console.error("[API] Process error:",r),this.isReady=!1}))}async findAvailablePort(e){return new Promise((s,r)=>{const o=$.createServer();o.listen(e,()=>{const i=o.address();if(i&&typeof i=="object"){const{port:h}=i;o.close(()=>s(h))}else r(new Error("Unable to get server address"))}),o.on("error",()=>{e<65535?s(this.findAvailablePort(e+1)):r(new Error("No available ports found"))})})}async waitForServer(e=30,s=1e3){for(let r=1;r<=e;r++){try{if((await D(`http://localhost:${this.port}/health`,{timeout:2e3})).ok)return console.log(`✅ API health check passed (attempt ${r})`),!0}catch{console.log(`⏳ Waiting for API server... (attempt ${r}/${e})`)}r<e&&await new Promise(o=>setTimeout(o,s))}throw new Error(`API server failed to start after ${e} attempts`)}stop(){this.process&&!this.process.killed&&(console.log("🛑 Stopping API server..."),this.process.kill("SIGTERM"),setTimeout(()=>{this.process&&!this.process.killed&&this.process.kill("SIGKILL")},5e3)),this.process=null,this.isReady=!1,this.baseUrl=null}getBaseUrl(){return this.baseUrl}isServerReady(){return this.isReady}}class N{constructor(e){this.config=e}async getLatestRelease(e=!1){try{const s=await this.getAllReleases();if(!s.length)return null;const r=s.filter(o=>!(o.draft||!e&&o.prerelease));return r.sort((o,i)=>new Date(i.published_at).getTime()-new Date(o.published_at).getTime()),r[0]||null}catch(s){throw console.error("Failed to fetch latest release:",s),s}}async getAllReleases(){const e=new Date;if(this.cachedReleases&&this.lastFetch&&e.getTime()-this.lastFetch.getTime()<3e5)return this.cachedReleases;try{const s=`${this.config.apiBaseUrl}/repos/${this.config.owner}/${this.config.repo}/releases`,r={Accept:"application/vnd.github.v3+json","User-Agent":`${this.config.repo}-app`};this.lastETag&&(r["If-None-Match"]=this.lastETag);const o=await fetch(s,{headers:r,signal:AbortSignal.timeout(this.config.rateLimitBuffer*1e3)});if(o.status===304&&this.cachedReleases)return this.cachedReleases;if(!o.ok)throw o.status===403?new Error("GitHub API rate limit exceeded"):new Error(`GitHub API error: ${o.status} ${o.statusText}`);const i=o.headers.get("ETag");i&&(this.lastETag=i);const h=await o.json();return this.cachedReleases=h,this.lastFetch=e,h}catch(s){if(this.cachedReleases)return console.warn("Using cached release data due to fetch error:",s),this.cachedReleases;throw s}}isNewerVersion(e,s){const r=e.replace(/^v/,""),o=s.replace(/^v/,""),i=r.split(".").map(Number),h=o.split(".").map(Number),u=Math.max(i.length,h.length);for(;i.length<u;)i.push(0);for(;h.length<u;)h.push(0);for(let d=0;d<u;d++){if(h[d]>i[d])return!0;if(h[d]<i[d])return!1}return!1}clearCache(){this.cachedReleases=void 0,this.lastFetch=void 0,this.lastETag=void 0}}var p=(t=>(t.IDLE="idle",t.CHECKING="checking",t.UPDATE_AVAILABLE="update-available",t.DOWNLOADING="downloading",t.DOWNLOADED="downloaded",t.ERROR="error",t))(p||{});const L={checking:{enabled:!0,interval:36e5,checkOnStartup:!0,retryAttempts:3,timeout:3e4},notifications:{showBadge:!0,autoShowPopover:!1,dismissable:!0},releases:{includePreReleases:!1,minimumVersion:"1.0.0"},github:{apiBaseUrl:"https://api.github.com",owner:"whttlr",repo:"electron-app",rateLimitBuffer:100}};class F{constructor(e={}){this.listeners=new Map,this.config={...L,...e},this.githubChecker=new N(this.config.github),this.state={status:p.IDLE}}async initialize(){console.log("Initializing UpdateService..."),this.config.checking.checkOnStartup&&setTimeout(()=>{this.checkForUpdates().catch(e=>{console.error("Startup update check failed:",e)})},5e3),this.config.checking.enabled&&this.startPeriodicChecking()}async checkForUpdates(){console.log("Checking for updates..."),this.setState({status:p.CHECKING});try{const e=await this.getCurrentVersion(),s=await this.githubChecker.getLatestRelease(this.config.releases.includePreReleases);if(!s)throw new Error("No releases found");const r=s.tag_name,o=this.githubChecker.isNewerVersion(e,r),i={updateAvailable:o,currentVersion:e,latestVersion:r,releaseNotes:s.body,downloadUrl:this.getDownloadUrl(s),publishedAt:s.published_at,releaseData:s};return this.setState({status:o?p.UPDATE_AVAILABLE:p.IDLE,lastCheck:new Date,updateData:i}),o?(this.emit("update-available",i),console.log(`Update available: ${e} -> ${r}`)):console.log("No updates available"),i}catch(e){throw console.error("Update check failed:",e),this.setState({status:p.ERROR,error:e instanceof Error?e.message:"Unknown error"}),this.emit("update-error",e),e}}startPeriodicChecking(){this.checkInterval&&clearInterval(this.checkInterval),console.log(`Starting periodic update checks every ${this.config.checking.interval}ms`),this.checkInterval=setInterval(()=>{this.checkForUpdates().catch(e=>{console.error("Periodic update check failed:",e)})},this.config.checking.interval)}stopPeriodicChecking(){this.checkInterval&&(clearInterval(this.checkInterval),this.checkInterval=void 0,console.log("Stopped periodic update checking"))}async getCurrentVersion(){var e;return typeof window<"u"&&((e=window.electronAPI)!=null&&e.getAppVersion)?await window.electronAPI.getAppVersion():process.env.npm_package_version||"1.0.0"}getUpdateStatus(){return{...this.state}}getDownloadUrl(e){var h;const s=process.platform;process.arch;const o={win32:/\.exe$/i,darwin:/\.dmg$/i,linux:/\.AppImage$/i}[s];if(!o)return;const i=(h=e.assets)==null?void 0:h.find(u=>o.test(u.name));return i==null?void 0:i.browser_download_url}setState(e){this.state={...this.state,...e},this.emit("state-change",this.state)}on(e,s){this.listeners.has(e)||this.listeners.set(e,[]),this.listeners.get(e).push(s)}off(e,s){const r=this.listeners.get(e);if(r){const o=r.indexOf(s);o>-1&&r.splice(o,1)}}emit(e,s){const r=this.listeners.get(e);r&&r.forEach(o=>{try{o(s)}catch(i){console.error(`Error in update service listener for ${e}:`,i)}})}destroy(){this.stopPeriodicChecking(),this.listeners.clear(),this.githubChecker.clearCache()}}const f=b.dirname(__filename);let a=null,l=null,c=null;async function m(){console.log("🔄 Initializing application...");try{l=new _;const t=await l.start();if(a=new n.BrowserWindow({width:1200,height:800,title:"CNC Jog Controls",webPreferences:{preload:b.join(f,"../preload/preload.js"),contextIsolation:!0,nodeIntegration:!1,webSecurity:!1,allowRunningInsecureContent:!0,experimentalFeatures:!0},show:!1}),T(),O(),a.once("ready-to-show",()=>{a==null||a.show()}),console.log("Environment check:",{NODE_ENV:process.env.NODE_ENV,isPackaged:n.app.isPackaged,__dirname:f}),!n.app.isPackaged)console.log("Development mode: Loading from Vite dev server..."),await a.loadURL("http://localhost:5173");else{console.log("Production mode: Loading from built files...");const e=b.join(f,"../../dist/index.html");console.log(`Loading from: ${e}`),console.log(`File exists: ${(await import("fs")).existsSync(e)}`),await a.loadFile(e)}a.webContents.send("api-ready",{baseUrl:t}),console.log("✅ Application ready!")}catch(t){console.error("❌ Failed to initialize application:",t),n.app.quit()}a.webContents.on("did-fail-load",(t,e,s,r)=>{console.error(`Failed to load ${r}: ${s} (${e})`)}),a.webContents.on("did-finish-load",()=>{console.log("Page finished loading successfully")}),n.app.isPackaged||a.webContents.openDevTools(),a.on("closed",()=>{a=null})}function T(){n.ipcMain.handle("get-api-config",()=>({baseUrl:l==null?void 0:l.getBaseUrl(),ready:l==null?void 0:l.isServerReady()})),n.ipcMain.handle("api-health-check",async()=>{if(!(l!=null&&l.isServerReady()))return{healthy:!1,error:"API server not ready"};try{return{healthy:(await require("node-fetch")(`${l.getBaseUrl()}/health`)).ok}}catch(t){return{healthy:!1,error:t.message}}}),n.ipcMain.handle("get-app-version",()=>n.app.getVersion()),n.ipcMain.handle("update:check",async()=>await(c==null?void 0:c.checkForUpdates())),n.ipcMain.handle("update:download",async()=>{try{return await g.autoUpdater.downloadUpdate()}catch(t){throw console.error("Update download failed:",t),t}}),n.ipcMain.handle("update:install",()=>{g.autoUpdater.quitAndInstall()}),n.ipcMain.handle("update:get-status",()=>c==null?void 0:c.getUpdateStatus())}function O(){try{g.autoUpdater.setFeedURL({provider:"github",owner:"whttlr",repo:"electron-app"}),c=new F,c.on("update-available",t=>{console.log("Update available:",t),a==null||a.webContents.send("update:available",t)}),c.on("update-error",t=>{console.error("Update error:",t),a==null||a.webContents.send("update:error",t)}),c.on("state-change",t=>{a==null||a.webContents.send("update:state-change",t)}),g.autoUpdater.on("update-downloaded",t=>{console.log("Update downloaded:",t),a==null||a.webContents.send("update:downloaded",t)}),g.autoUpdater.on("download-progress",t=>{a==null||a.webContents.send("update:download-progress",t)}),c.initialize(),console.log("✅ Update service initialized")}catch(t){console.error("❌ Failed to initialize update service:",t)}}n.app.whenReady().then(()=>{n.app.setName("CNC Jog Controls"),m(),n.app.on("activate",()=>{n.BrowserWindow.getAllWindows().length===0&&m()})});n.app.on("before-quit",()=>{console.log("🔄 Shutting down..."),l==null||l.stop(),c==null||c.destroy()});n.app.on("window-all-closed",()=>{process.platform!=="darwin"&&n.app.quit()});
